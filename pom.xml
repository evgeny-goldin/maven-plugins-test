<?xml version="1.0" encoding="UTF-8"?>

<project xmlns              = "http://maven.apache.org/POM/4.0.0"
         xmlns:xsi          = "http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0
                               http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.goldin.maven-plugins-test</groupId>
    <artifactId>main.tests</artifactId>
    <packaging>pom</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>[${project.groupId}:${project.artifactId}:${project.version}]</name>


    <properties>
        <outputDirectory>${project.build.outputDirectory}</outputDirectory>
        <ftpTests>false</ftpTests>
        <slowTests>false</slowTests>

        <!-- ~~~~~~~~~~~~~ -->
        <!-- Versions used -->
        <!-- ~~~~~~~~~~~~~ -->

        <maven-version>3.0.4</maven-version>
        <java-version>1.6</java-version>
        <gmaven-version>1.5</gmaven-version>
        <groovy-version>2.1.5</groovy-version>
        <gcommons-version>0.6.2</gcommons-version>
        <plugins-version>0.3-SNAPSHOT</plugins-version>

        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Versions used in tests, if updated => tests need to be updated as well -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

        <junit-version>4.11</junit-version>
        <artifactory-version>2.3.1</artifactory-version>
        <jenkins-version>1.421</jenkins-version>
        <spring-version>3.1.1.RELEASE</spring-version>
        <log4j-version>1.2.16</log4j-version>
        <jaxen-version>1.1.1</jaxen-version>

        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Number of transitive String dependencies -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

        <springCompileTestProvidedDependencies>32</springCompileTestProvidedDependencies>
        <springCompileTestDependencies>29</springCompileTestDependencies>
        <springCompileDependencies>8</springCompileDependencies>
        <springTestDependencies>13</springTestDependencies>
        <springProvidedDependencies>1</springProvidedDependencies>

        <!-- ~~~~~~~~~~~~~~~~~ -->
        <!-- OS-specific tests -->
        <!-- ~~~~~~~~~~~~~~~~~ -->

        <isWindows>System.getProperty( 'os.name' ).toLowerCase().contains( 'windows' )</isWindows>
        <isLinux>  System.getProperty( 'os.name' ).toLowerCase().contains( 'linux'   )</isLinux>
        <isMac>    System.getProperty( 'os.name' ).toLowerCase().contains( 'mac os'  )</isMac>
    </properties>


    <build>

        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <!-- http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.apache.maven.plugins%22%20AND%20a%3A%22maven-clean-plugin%22 -->
                    <version>2.5</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <!-- http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.apache.maven.plugins%22%20AND%20a%3A%22maven-resources-plugin%22 -->
                    <version>2.6</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <!-- http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.apache.maven.plugins%22%20AND%20a%3A%22maven-compiler-plugin%22 -->
                    <version>3.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <!-- http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.apache.maven.plugins%22%20AND%20a%3A%22maven-surefire-plugin%22 -->
                    <version>2.13</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <!-- http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.apache.maven.plugins%22%20AND%20a%3A%22maven-install-plugin%22 -->
                    <version>2.4</version>
                </plugin>

                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                <!-- Configuring Jar plugin to pack nothing -->
                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <!-- http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.apache.maven.plugins%22%20AND%20a%3A%22maven-jar-plugin%22 -->
                    <version>2.4</version>
                    <configuration>
                        <includes>
                            <include>nothing</include>
                        </includes>
                    </configuration>
                </plugin>

                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                <!-- Configuring GMaven plugin dependencies -->
                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

                <plugin>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <version>${gmaven-version}</version>
                    <configuration>
                        <providerSelection>2.0</providerSelection>
                        <source/>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.gmaven.runtime</groupId>
                            <artifactId>gmaven-runtime-2.0</artifactId>
                            <version>${gmaven-version}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>org.codehaus.groovy</groupId>
                                    <artifactId>groovy</artifactId>
                                </exclusion>
                                <exclusion>
                                    <groupId>org.codehaus.groovy</groupId>
                                    <artifactId>groovy-all</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                        <dependency>
                            <groupId>org.codehaus.groovy</groupId>
                            <artifactId>groovy</artifactId>
                            <version>${groovy-version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.codehaus.groovy</groupId>
                            <artifactId>groovy-ant</artifactId>
                            <version>${groovy-version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.ivy</groupId>
                            <artifactId>ivy</artifactId>
                            <version>2.3.0-rc2</version>
                        </dependency>
                        <dependency>
                            <groupId>com.github.goldin</groupId>
                            <artifactId>gcommons</artifactId>
                            <version>${gcommons-version}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>org.slf4j</groupId>
                                    <artifactId>slf4j-log4j12</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Enforcing Java/Maven versions -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.1</version>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>maven-enforcer</id>
                        <goals>
                            <goal>display-info</goal>
                            <goal>enforce</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven-version}</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java-version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>silencer-maven-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <execution>
                        <id>enable-silencer</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>silence</goal>
                        </goals>
                        <configuration>
                            <runIf>{{ System.getProperty( 'silence' ) != null }}</runIf>
                            <logSummary>true</logSummary>
                            <topN>5</topN>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>ant-echo</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo>Ant output!</echo>
                                <zip destfile="1.zip"><fileset file="pom.xml"/></zip>
                                <zip destfile="1.zip" update="true"><fileset file="pom.xml"/></zip>
                                <delete file="1.zip"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Displaying plugin versions checked -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>${gmaven-version}</version>
                <executions>
                    <execution>
                        <id>display-versions</id>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <source>
                                if ( System.getProperty( 'silence' ) == null )
                                {
                                    final props = new Properties()
                                    props.load( org.apache.maven.Maven.class.getResourceAsStream( '/META-INF/maven/org.apache.maven/maven-core/pom.properties' ))

                                    final mavenVersion = props.getProperty( 'version', 'Unknown' ).trim()
                                    final isWindows    = ${isWindows}
                                    final isLinux      = ${isLinux}
                                    final isMac        = ${isMac}

                                    println """
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                              -=-=-= Running tests =-=-=-

 Module     - [${project.groupId}:${project.artifactId}]
 Java       - [${java.version}][${java.home}][${java.vendor}]
 Maven      - [$mavenVersion]
 Groovy     - [$GroovySystem.version]
 Plugins    - [${plugins-version}]
 -------------------------------------
 Slow tests - [${slowTests}]
 FTP  tests - [${ftpTests}]
 Is Windows - [$isWindows]
 Is Linux   - [$isLinux]
 Is Mac     - [$isMac]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~""".trim()
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ~~~~~~~~~~~~~~~~~~ -->
            <!-- Setting properties -->
            <!-- ~~~~~~~~~~~~~~~~~~ -->

            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <execution>
                        <id>set-ftp-scp-paths-slowTests</id>
                        <goals>
                            <goal>set-properties</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <runIf>{{ ( session.executionProperties.ftpPath == null ) &amp;&amp; Boolean.valueOf( slowTests ) }}</runIf>
                            <verbose>false</verbose>
                            <properties>
                                <property>
                                    <name>ftpPath</name>
                                    <value>
                                        {{
                                            assert System.getProperty( 'filesDir' ), 'System property "filesDir" is not defined!'
                                            final data = new File( System.getProperty( 'filesDir' ), 'ftp.txt' ).text.splitWith( 'eachLine' )
                                            "ftp://" + data[ 0 ] + ":" + data[ 1 ] + "@" + data[ 2 ] + ":" + data[ 3 ]
                                            <!--       username          password             host          directory -->
                                        }}
                                    </value>
                                </property>
                                <property>
                                    <name>scpPath</name>
                                    <value>
                                        {{
                                            assert System.getProperty( 'filesDir' ), 'System property "filesDir" is not defined!'
                                            final data = new File( System.getProperty( 'filesDir' ), 'scp.txt' ).text.splitWith( 'eachLine' )
                                            "scp://" + data[ 0 ] + ":" + data[ 1 ] + "@" + data[ -2 ] + ":" + data[ -1 ]
                                            <!--       username          password             host          directory -->
                                        }}
                                    </value>
                                </property>
                                <property>
                                    <name>scpPathKey</name>
                                    <value>
                                        {{
                                            assert System.getProperty( 'filesDir' ), 'System property "filesDir" is not defined!'
                                            final data = new File( System.getProperty( 'filesDir' ), 'scp.txt' ).text.splitWith( 'eachLine' )
                                            "scp://" + data[ 0 ] + ":" + data[ 2 ] + "@" + data[ -2 ] + ":" + data[ -1 ]
                                             <!--       username            key             host          directory -->
                                        }}
                                    </value>
                                </property>
                                <property>
                                    <name>scpPathKeyPassphrase</name>
                                    <value>
                                        {{
                                            assert System.getProperty( 'filesDir' ), 'System property "filesDir" is not defined!'
                                            final data = new File( System.getProperty( 'filesDir' ), 'scp.txt' ).text.splitWith( 'eachLine' )
                                            "scp://" + data[ 0 ] + ":" + data[ 3 ] + "@" + data[ -2 ] + ":" + data[ -1 ]
                                             <!--       username       key + passphrase     host          directory -->
                                        }}
                                    </value>
                                </property>
                                <property>
                                    <name>scpPathSettings</name>
                                    <value>
                                        {{
                                            assert System.getProperty( 'filesDir' ), 'System property "filesDir" is not defined!'
                                            final data = new File( System.getProperty( 'filesDir' ), 'scp.txt' ).text.splitWith( 'eachLine' )
                                            "scp://" + data[ 0 ] + ":&lt;settings&gt;@" + data[ -2 ] + ":" + data[ -1 ]
                                             <!--       username                      host          directory -->
                                        }}
                                    </value>
                                </property>
                            </properties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>set-ftp-scp-paths-noTests</id>
                        <goals>
                            <goal>set-properties</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <runIf>{{ ( session.executionProperties.ftpPath == null ) &amp;&amp; ( ! Boolean.valueOf( slowTests )) }}</runIf>
                            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                            <!-- Setting paths to dummy values if "slow tests" are not running -->
                            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                            <properties>
                                <property>
                                    <name>ftpPath</name>
                                    <value>{{'dummy'}}</value>
                                </property>
                                <property>
                                    <name>scpPath</name>
                                    <value>{{'dummy'}}</value>
                                </property>
                                <property>
                                    <name>scpPathKey</name>
                                    <value>{{'dummy'}}</value>
                                </property>
                                <property>
                                    <name>scpPathKeyPassphrase</name>
                                    <value>{{'dummy'}}</value>
                                </property>
                                <property>
                                    <name>scpPathSettings</name>
                                    <value>{{'dummy'}}</value>
                                </property>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>cleanup-temp</module>
                <module>quick-test</module>
                <module>about-maven-plugin</module>
                <module>jenkins-maven-plugin</module>
                <module>ivy-maven-plugin</module>
                <module>duplicates-finder-plugin</module>
                <module>find-maven-plugin</module>
                <module>properties-maven-plugin</module>
                <module>sshexec-maven-plugin</module>
                <module>timestamp-maven-plugin</module>
                <module>copy-maven-plugin</module>
                <module>verify-temp</module>
            </modules>
        </profile>
        <profile>
            <id>mavenCentral</id>
            <modules>
                <module>cleanup-temp</module>
                <module>about-maven-plugin</module>
                <module>verify-temp</module>
            </modules>
        </profile>
    </profiles>
</project>
