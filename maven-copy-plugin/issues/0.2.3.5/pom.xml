<?xml version="1.0" encoding="UTF-8"?>

<project xmlns              = "http://maven.apache.org/POM/4.0.0"
         xmlns:xsi          = "http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0
                               http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.goldin.plugins.maven-plugins-test</groupId>
    <artifactId>maven-copy-plugin.issues.0.2.3.5</artifactId>
    <packaging>jar</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>[${project.groupId}:${project.artifactId}:${project.version}]</name>


    <parent>
        <groupId>com.goldin.plugins.maven-plugins-test</groupId>
        <artifactId>maven-copy-plugin.issues</artifactId>
        <version>0.1-SNAPSHOT</version>
    </parent>


    <properties>
        <resourcesDir>${project.basedir}/../../copy-mojo/src/main/resources</resourcesDir>
        <mainPom>${project.basedir}/../../../pom.xml</mainPom>

        <!-- http://evgeny-goldin.org/youtrack/issue/pl-516 -->
        <processAssert>
        {{
            assert files.size()    == 4
            assert file            == files.first()
            assert file.name       == '0.txt'
            assert files[ 0 ].name == '0.txt'
            assert files[ 1 ].name == '1.txt'
            assert files[ 2 ].name == '2.txt'
            assert files[ 3 ].name == '3.txt'
        }}
        </processAssert>
        <assert12>
        {{
            assert files.size() == 12
            assert files.every{ File f -> f.lastModified() > new File( resourcesDir, f.name ).lastModified() }
        }}
        </assert12>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Splits file name to "body" and "extension" -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <splitName>findAll( /^([^\.]+)(\.(.+))?$/ ){ [ it[1], it[3] ?: '' ] }[ 0 ]</splitName>
    </properties>


    <build>
        <plugins>
            <plugin>
                <groupId>com.goldin.plugins</groupId>
                <artifactId>maven-copy-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-515 -->
                    <!-- "<nonFilteredExtensions> is case-sensitive"    -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-515</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetPath>${outputDir}/pl-515/1</targetPath>
                                    <file>${project.basedir}/src/main/resources/1.bat</file>
                                    <filtering>true</filtering>
                                    <process>{{ assert file.text.contains( '$' + '{' ) }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-515/2</targetPath>
                                    <file>${project.basedir}/src/main/resources/1.bat</file>
                                    <filtering>true</filtering>
                                    <filterWithDollarOnly>true</filterWithDollarOnly>
                                    <process>{{ assert ! file.text.contains( '$' + '{' ) }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-515/3</targetPath>
                                    <file>${project.basedir}/src/main/resources/1.bat</file>
                                    <filtering>true</filtering>
                                    <filterWithDollarOnly>true</filterWithDollarOnly>
                                    <nonFilteredExtensions>bat</nonFilteredExtensions>
                                    <process>{{ assert file.text.contains( '$' + '{' ) }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-515/4</targetPath>
                                    <file>${project.basedir}/src/main/resources/1.bat</file>
                                    <filtering>true</filtering>
                                    <filterWithDollarOnly>true</filterWithDollarOnly>
                                    <destFileExtension>BaT</destFileExtension>
                                    <nonFilteredExtensions>bat</nonFilteredExtensions>
                                    <process>{{ assert file.text.contains( '$' + '{' ) }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-515/5</targetPath>
                                    <file>${project.basedir}/src/main/resources/1.bat</file>
                                    <filtering>true</filtering>
                                    <filterWithDollarOnly>true</filterWithDollarOnly>
                                    <destFilePrefix>opa-</destFilePrefix>
                                    <destFileSuffix>-apo</destFileSuffix>
                                    <destFileExtension>bAt</destFileExtension>
                                    <nonFilteredExtensions>batt</nonFilteredExtensions>
                                    <process>{{ assert ! file.text.contains( '$' + '{' ) }}</process>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-514                      -->
                    <!-- "Eliminate temp files usage when <filtering> or <replace> are used" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-514</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Regular copy operation -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDir}/pl-514/1</targetPath>
                                    <file>${mainPom}</file>
                                    <filtering>true</filtering>
                                    <filter>{{ files }}</filter>
                                    <process>
                                    {{
                                        assert ! file.text.contains( '$' + '{' )
                                        assert   file.text.find( /\d|\w/ )
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/2</targetPath>
                                    <file>${mainPom}</file>
                                    <replace>
                                        <from>(?s).</from>
                                        <to>a</to>
                                    </replace>
                                    <filter>{{ files }}</filter>
                                    <process>{{ assert file.text ==~ /^a+$/ }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/3</targetPath>
                                    <file>${mainPom}</file>
                                    <filtering>true</filtering>
                                    <replaces>
                                        <replace>
                                            <from>\d+</from>
                                            <to>*</to>
                                        </replace>
                                        <replace>
                                            <from>\w+</from>
                                            <to>!</to>
                                        </replace>
                                    </replaces>
                                    <filter>{{ files }}</filter>
                                    <process>{{ assert file.text.with{ ! ( contains( '$' + '{' ) || find( /\d|\w/ )) }}}</process>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Copying file to itself -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetRoots>${outputDir}/pl-514</targetRoots>
                                    <targetPath>4, 5, 6</targetPath>
                                    <file>${mainPom}</file>
                                    <filter>{{ files }}</filter>
                                    <process>{{ assert files.size() == 3 }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/4</targetPath>
                                    <file>${outputDir}/pl-514/4/pom.xml</file>
                                    <filtering>true</filtering>
                                    <filter>{{ files }}</filter>
                                    <process>
                                    {{
                                        assert ! file.text.contains( '$' + '{' )
                                        assert   file.text.find( /\d|\w/ )
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/5</targetPath>
                                    <file>${outputDir}/pl-514/5/pom.xml</file>
                                    <replace>
                                        <from>(?s).</from>
                                        <to>a</to>
                                    </replace>
                                    <filter>{{ files }}</filter>
                                    <process>{{ assert file.text ==~ /^a+$/ }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/6</targetPath>
                                    <file>${outputDir}/pl-514/6/pom.xml</file>
                                    <filtering>true</filtering>
                                    <replaces>
                                        <replace>
                                            <from>\d+</from>
                                            <to>*</to>
                                        </replace>
                                        <replace>
                                            <from>\w+</from>
                                            <to>!</to>
                                        </replace>
                                    </replaces>
                                    <filter>{{ files }}</filter>
                                    <process>{{ assert file.text.with{ ! ( contains( '$' + '{' ) || find( /\d|\w/ )) }}}</process>
                                </resource>
                                <!-- ~~~~~~~~~~~ -->
                                <!-- Moving file -->
                                <!-- ~~~~~~~~~~~ -->
                                <resource>
                                    <targetRoots>${outputDir}/pl-514</targetRoots>
                                    <targetPath>7, 8, 9</targetPath>
                                    <file>${mainPom}</file>
                                    <filter>{{ files }}</filter>
                                    <process>{{ assert files.size() == 3 }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/10</targetPath>
                                    <file>${outputDir}/pl-514/7/pom.xml</file>
                                    <move>true</move>
                                    <filtering>true</filtering>
                                    <filter>{{ files }}</filter>
                                    <process>
                                    {{
                                        assert ! file.text.contains( '$' + '{' )
                                        assert   file.text.find( /\d|\w/ )
                                        assert ! new File( outputDir, 'pl-514/7/pom.xml' ).file
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/11</targetPath>
                                    <file>${outputDir}/pl-514/8/pom.xml</file>
                                    <move>true</move>
                                    <replace>
                                        <from>(?s).</from>
                                        <to>a</to>
                                    </replace>
                                    <filter>{{ files }}</filter>
                                    <process>
                                    {{
                                        assert file.text ==~ /^a+$/
                                        assert ! new File( outputDir, 'pl-514/8/pom.xml' ).file
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/12</targetPath>
                                    <file>${outputDir}/pl-514/9/pom.xml</file>
                                    <move>true</move>
                                    <filtering>true</filtering>
                                    <replaces>
                                        <replace>
                                            <from>\d+</from>
                                            <to>*</to>
                                        </replace>
                                        <replace>
                                            <from>\w+</from>
                                            <to>!</to>
                                        </replace>
                                    </replaces>
                                    <filter>{{ files }}</filter>
                                    <process>
                                    {{
                                        assert file.text.with{ ! ( contains( '$' + '{' ) || find( /\d|\w/ )) }
                                        assert ! new File( outputDir, 'pl-514/9/pom.xml' ).file
                                    }}
                                    </process>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Skipping identical files -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDir}/pl-514/13</targetPath>
                                    <directory>${resourcesDir}</directory>
                                    <process>
                                    {{
                                        assert files.size() == 12
                                        assert files.every{ File f -> f.lastModified() == new File( resourcesDir, f.name ).lastModified() }
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/13</targetPath>
                                    <directory>${resourcesDir}</directory>
                                    <process>
                                    {{
                                        assert files.size() == 12
                                        assert files.every{ File f -> f.lastModified() == new File( resourcesDir, f.name ).lastModified() }
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/13</targetPath>
                                    <directory>${resourcesDir}</directory>
                                    <skipIdentical>true</skipIdentical>
                                    <process>{{ assert files.size() == 0 }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/13</targetPath>
                                    <directory>${outputDir}/pl-514/13</directory>
                                    <process>{{ assert files.size() == 0 }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/13</targetPath>
                                    <directory>${outputDir}/pl-514/13</directory>
                                    <filtering>true</filtering>
                                    <process>${assert12}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/13</targetPath>
                                    <directory>${outputDir}/pl-514/13</directory>
                                    <replace>
                                        <from>.</from>
                                        <to>..</to>
                                    </replace>
                                    <process>${assert12}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-514/13</targetPath>
                                    <directory>${outputDir}/pl-514/13</directory>
                                    <filtering>true</filtering>
                                    <replace>
                                        <from>.</from>
                                        <to>..</to>
                                    </replace>
                                    <process>${assert12}</process>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-511                                                         -->
                    <!-- "Do not filter files if they don't contain ${..} expressions when <filterWithDollarOnly> is activated" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-511</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetPath>${outputDir}/pl-511/1</targetPath>
                                    <file>${mainPom}</file>
                                    <filtering>true</filtering>
                                    <destFileName>1.xml</destFileName>
                                    <process>{{ assert file.with{ ( name == '1.xml' ) &amp;&amp; ( ! text.contains( '$' + '{' )) } }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-511/2</targetPath>
                                    <file>${outputDir}/pl-511/1/1.xml</file>
                                    <filtering>true</filtering>
                                    <filterWithDollarOnly>true</filterWithDollarOnly>
                                    <!-- No filtering was made - there's no "${ .. }" expressions in the file and "filterWithDollarOnly" is used  -->
                                    <process>{{ assert file.lastModified() == new File( outputDir, 'pl-511/1/1.xml' ).lastModified(); sleep ( 1000 ) }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-511/3</targetPath>
                                    <file>${outputDir}/pl-511/1/1.xml</file>
                                    <filtering>true</filtering>
                                    <!-- Filtering was made - there's no "${ .. }" expressions in the file but "filterWithDollarOnly" isn't used -->
                                    <process>{{ assert ( file.lastModified() - 1000 ) == new File( outputDir, 'pl-511/1/1.xml' ).lastModified() }}</process>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-522                                   -->
                    <!-- "<process> gets list of files with duplicate entries if <preservePath> is false" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-522</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetRoots>${outputDir}/pl-522/1</targetRoots>
                                    <targetPaths>
                                        <targetPath>0/0/09</targetPath>
                                        <targetPath>1/1</targetPath>
                                        <targetPath>2/2</targetPath>
                                        <targetPath>3</targetPath>
                                        <targetPath>6/7</targetPath>
                                        <targetPath>9</targetPath>
                                        <targetPath>12</targetPath>
                                        <targetPath>aaa/bbb/ccc</targetPath>
                                    </targetPaths>
                                    <file>${project.basedir}/pom.xml</file>
                                </resource>
                                <resource>
                                    <targetRoots>${outputDir}/pl-522/1</targetRoots>
                                    <targetPaths>
                                        <targetPath>0/0/09</targetPath>
                                        <targetPath>1/1</targetPath>
                                        <targetPath>2/2</targetPath>
                                        <targetPath>3</targetPath>
                                        <targetPath>6/7</targetPath>
                                        <targetPath>9</targetPath>
                                        <targetPath>12</targetPath>
                                        <targetPath>aaa/bbb/ccc</targetPath>
                                    </targetPaths>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>1.txt</destFileName>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-522/2</targetPath>
                                    <directory>${outputDir}/pl-522/1</directory>
                                    <process>{{ assert ( files.size() == 2 ) &amp;&amp; files.every{ ( it.name == 'pom.xml' ) || ( it.name == '1.txt' ) } }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-522/3</targetPath>
                                    <directory>${outputDir}/pl-522/1</directory>
                                    <preservePath>true</preservePath>
                                    <process>{{ assert ( files.size() == ( 2 * 8 )) &amp;&amp; files.every{ ( it.name == 'pom.xml' ) || ( it.name == '1.txt' ) } }}</process>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-510                      -->
                    <!-- "Provide an option to exclude ZIP entries when archive is unpacked" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-510</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetPath>${outputDir}/pl-510/1</targetPath>
                                    <dependency>
                                        <groupId>org.codehaus.groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                        <version>1.8.3</version>
                                    </dependency>
                                    <unpack>true</unpack>
                                    <preservePath>true</preservePath>
                                    <zipEntryExclude>**/*Abstract*, **/beans/**</zipEntryExclude>
                                    <process>{{ assert files.size() == 3705 }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-510/2</targetPath>
                                    <dependency>
                                        <groupId>org.codehaus.groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                        <version>1.8.3</version>
                                    </dependency>
                                    <unpack>true</unpack>
                                    <preservePath>true</preservePath>
                                    <zipEntriesExclude>
                                        <zipEntryExclude>**/*Abstract*</zipEntryExclude>
                                        <zipEntryExclude>**/beans/**</zipEntryExclude>
                                    </zipEntriesExclude>
                                    <process>{{ assert files.size() == 3705 }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-510/3</targetPath>
                                    <dependency>
                                        <groupId>org.codehaus.groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                        <version>1.8.3</version>
                                    </dependency>
                                    <unpack>true</unpack>
                                    <preservePath>true</preservePath>
                                    <zipEntry>**/*.class</zipEntry>
                                    <zipEntriesExclude>
                                        <zipEntryExclude>**/*Abstract*.class</zipEntryExclude>
                                        <zipEntryExclude>**/beans/**</zipEntryExclude>
                                    </zipEntriesExclude>
                                    <process>{{ assert files.size() == 3631 }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-510/4</targetPath>
                                    <dependency>
                                        <groupId>org.jenkins-ci.main</groupId>
                                        <artifactId>jenkins-war</artifactId>
                                        <version>1.421</version>
                                        <type>war</type>
                                    </dependency>
                                    <unpack>true</unpack>
                                    <preservePath>true</preservePath>
                                    <zipEntryExclude>**/*.html, **/*.png</zipEntryExclude>
                                    <process>{{ assert files.size() == 437 }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-510/5</targetPath>
                                    <dependency>
                                        <groupId>org.jenkins-ci.main</groupId>
                                        <artifactId>jenkins-war</artifactId>
                                        <version>1.421</version>
                                        <type>war</type>
                                    </dependency>
                                    <unpack>true</unpack>
                                    <preservePath>true</preservePath>
                                    <zipEntry>**/*.html, **/*.jar, **/*.png</zipEntry>
                                    <zipEntryExclude>**/ant-*.html, **/commons-*.jar, **/empty.png, **/grey.png</zipEntryExclude>
                                    <process>{{ assert files.size() == 842 }}</process>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-516                        -->
                    <!-- "Order of files is not kept when "files" list is passed to <process>" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-516</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/1</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>0.txt</destFileName>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/1</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>1.txt</destFileName>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/1</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>2.txt</destFileName>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/1</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>3.txt</destFileName>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/2</targetPath>
                                    <directory>${outputDir}/pl-516/1</directory>
                                    <includes>
                                        <include>0.txt</include>
                                        <include>1.txt</include>
                                        <include>2.txt</include>
                                        <include>3.txt</include>
                                    </includes>
                                    <process>${processAssert}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/2</targetPath>
                                    <directory>${outputDir}/pl-516/1</directory>
                                    <includes>
                                        <include>3.txt</include>
                                        <include>1.txt</include>
                                        <include>0.txt</include>
                                        <include>2.txt</include>
                                    </includes>
                                    <process>${processAssert}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/2</targetPath>
                                    <directory>${outputDir}/pl-516/1</directory>
                                    <includes>
                                        <include>3.txt</include>
                                        <include>2.txt</include>
                                        <include>1.txt</include>
                                        <include>0.txt</include>
                                    </includes>
                                    <process>${processAssert}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/3</targetPath>
                                    <directory>${outputDir}/pl-516/1</directory>
                                    <include>0.txt, 1.txt, 2.txt, 3.txt</include>
                                    <process>${processAssert}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/3</targetPath>
                                    <directory>${outputDir}/pl-516/1</directory>
                                    <include>3.txt, 1.txt, 2.txt, 0.txt</include>
                                    <process>${processAssert}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-516/3</targetPath>
                                    <directory>${outputDir}/pl-516/1</directory>
                                    <include>3.txt, 2.txt, 1.txt, 0.txt</include>
                                    <process>${processAssert}</process>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-513                        -->
                    <!-- "Support <destFilePrefix>, <destFileSuffix>, and <destFileExtension>" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-513-1</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <!-- ~~~~~~~~~~~~~ -->
                                <!-- Copying files -->
                                <!-- ~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/1</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>1-pom-1.xml</destFileName>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/2</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFilePrefix>2-</destFilePrefix>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/3</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileSuffix>-3</destFileSuffix>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/4</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileExtension>4</destFileExtension>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/5</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFilePrefix>5-</destFilePrefix>
                                    <destFileSuffix>-5</destFileSuffix>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/6</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileSuffix>-6</destFileSuffix>
                                    <destFileExtension>6</destFileExtension>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/7</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFilePrefix>7-</destFilePrefix>
                                    <destFileSuffix>-7</destFileSuffix>
                                    <destFileExtension>7</destFileExtension>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/8</targetPath>
                                    <directory>${resourcesDir}</directory>
                                    <preservePath>true</preservePath>
                                    <filter>{{ files.findAll{ it.name.endsWith( '.txt' ) }}}</filter>
                                    <destFilePrefix>8-</destFilePrefix>
                                    <destFileSuffix>-8</destFileSuffix>
                                    <destFileExtension>8</destFileExtension>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/9</targetPath>
                                    <directory>${resourcesDir}</directory>
                                    <preservePath>true</preservePath>
                                    <filter>{{ files.findAll{ ! it.name.endsWith( '.txt' ) }}}</filter>
                                    <destFilePrefix>9-</destFilePrefix>
                                    <destFileSuffix>-9</destFileSuffix>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Copying files with structure -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/10</targetPath>
                                    <dependency>
                                        <groupId>com.jcraft</groupId>
                                        <artifactId>jsch</artifactId>
                                        <version>0.1.38</version>
                                    </dependency>
                                    <unpack>true</unpack>
                                    <process>{{ files.findAll{ it.name.endsWith( '.MF' ) }.first().delete() }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/11</targetPath>
                                    <directory>${outputDir}/pl-513-1/10</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                                    <destFilePrefix>11-</destFilePrefix>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/12</targetPath>
                                    <directory>${outputDir}/pl-513-1/10</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                                    <destFileSuffix>-12</destFileSuffix>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/13</targetPath>
                                    <directory>${outputDir}/pl-513-1/10</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                                    <destFilePrefix>13-</destFilePrefix>
                                    <destFileSuffix>-13</destFileSuffix>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/14</targetPath>
                                    <directory>${outputDir}/pl-513-1/10</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                                    <destFilePrefix>14-</destFilePrefix>
                                    <destFileSuffix>-14</destFileSuffix>
                                    <destFileExtension>14</destFileExtension>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/15</targetPath>
                                    <directory>${outputDir}/pl-513-1/10</directory>
                                    <verbose>false</verbose>
                                    <destFilePrefix>15-</destFilePrefix>
                                    <destFileSuffix>-15</destFileSuffix>
                                    <destFileExtension>15</destFileExtension>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-1/16</targetPath>
                                    <directory>${outputDir}/pl-513-1/10</directory>
                                    <verbose>false</verbose>
                                    <destFileName>destFileName</destFileName>
                                    <destFilePrefix>16-</destFilePrefix>
                                    <destFileSuffix>-16</destFileSuffix>
                                    <destFileExtension>16</destFileExtension>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-513                        -->
                    <!-- "Support <destFilePrefix>, <destFileSuffix>, and <destFileExtension>" -->
                    <!-- Duplicating tests using <process>                                     -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-513-2</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <!-- ~~~~~~~~~~~~~ -->
                                <!-- Copying files -->
                                <!-- ~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/1</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                               <!-- <destFileName>1-pom-1.xml</destFileName> -->
                                    <process>{{ assert file.file &amp;&amp; file.renameTo( new File( file.parentFile, '1-pom-1.xml' )) }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/2</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                               <!-- <destFilePrefix>2-</destFilePrefix> -->
                                    <process>{{ assert file.file &amp;&amp; file.renameTo( new File( file.parentFile, "2-$file.name" )) }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/3</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                               <!-- <destFileSuffix>-3</destFileSuffix> -->
                                    <process>
                                    {{
                                        def ( body, extension ) = file.name.${splitName}
                                        assert file.file &amp;&amp; file.renameTo( new File( file.parentFile, "$body-3" + ( extension ? '.' + extension : '' )))
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/4</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                              <!-- <destFileExtension>4</destFileExtension> -->
                                    <process>
                                    {{
                                        def ( body, extension ) = file.name.${splitName}
                                        assert file.file &amp;&amp; file.renameTo( new File( file.parentFile, "$body.4" ))
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/5</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                               <!-- <destFilePrefix>5-</destFilePrefix> -->
                               <!-- <destFileSuffix>-5</destFileSuffix> -->
                                    <process>
                                    {{
                                        def ( body, extension ) = file.name.${splitName}
                                        assert file.file &amp;&amp; file.renameTo( new File( file.parentFile, "5-$body-5" + ( extension ? '.' + extension : '' )))
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/6</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                               <!-- <destFileSuffix>-6</destFileSuffix> -->
                               <!-- <destFileExtension>6</destFileExtension> -->
                                    <process>
                                    {{
                                        def ( body, extension ) = file.name.${splitName}
                                        assert file.file &amp;&amp; file.renameTo( new File( file.parentFile, "$body-6.6" ))
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/7</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                               <!-- <destFilePrefix>7-</destFilePrefix>-->
                               <!-- <destFileSuffix>-7</destFileSuffix>-->
                               <!-- <destFileExtension>7</destFileExtension>-->
                                    <process>
                                    {{
                                        def ( body, extension ) = file.name.${splitName}
                                        assert file.file &amp;&amp; file.renameTo( new File( file.parentFile, "7-$body-7.7" ))
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/8</targetPath>
                                    <directory>${resourcesDir}</directory>
                                    <preservePath>true</preservePath>
                                    <filter>{{ files.findAll{ it.name.endsWith( '.txt' ) }}}</filter>
                               <!-- <destFilePrefix>8-</destFilePrefix>-->
                               <!-- <destFileSuffix>-8</destFileSuffix>-->
                               <!-- <destFileExtension>8</destFileExtension>-->
                                    <process>
                                    {{
                                        files.each { File f ->
                                            assert f.file
                                            def ( body, extension ) = f.name.${splitName}
                                            assert f.renameTo( new File( f.parentFile, "8-$body-8.8" ))
                                        }
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/9</targetPath>
                                    <directory>${resourcesDir}</directory>
                                    <preservePath>true</preservePath>
                                    <filter>{{ files.findAll{ ! it.name.endsWith( '.txt' ) }}}</filter>
                               <!-- <destFilePrefix>9-</destFilePrefix>-->
                               <!-- <destFileSuffix>-9</destFileSuffix>-->
                                    <process>
                                    {{
                                        files.each { File f ->
                                            assert f.file
                                            def ( body, extension ) = f.name.${splitName}
                                            assert f.renameTo( new File( f.parentFile, "9-$body-9" + ( extension ? '.' + extension : '' )))
                                        }
                                    }}
                                    </process>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Copying files with structure -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/10</targetPath>
                                    <dependency>
                                        <groupId>com.jcraft</groupId>
                                        <artifactId>jsch</artifactId>
                                        <version>0.1.38</version>
                                    </dependency>
                                    <unpack>true</unpack>
                                    <process>{{ files.findAll{ it.name.endsWith( '.MF' ) }.first().delete() }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/11</targetPath>
                                    <directory>${outputDir}/pl-513-2/10</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                               <!-- <destFilePrefix>11-</destFilePrefix> -->
                                    <process>
                                    {{
                                        files.each { File f ->
                                            assert f.file
                                            def ( body, extension ) = f.name.${splitName}
                                            assert f.renameTo( new File( f.parentFile, "11-$f.name" ))
                                        }
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/12</targetPath>
                                    <directory>${outputDir}/pl-513-2/10</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                               <!-- <destFileSuffix>-12</destFileSuffix> -->
                                    <process>
                                    {{
                                        files.each { File f ->
                                            assert f.file
                                            def ( body, extension ) = f.name.${splitName}
                                            assert f.renameTo( new File( f.parentFile, "$body-12" + ( extension ? '.' + extension : '' )))
                                        }
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/13</targetPath>
                                    <directory>${outputDir}/pl-513-2/10</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                               <!-- <destFilePrefix>13-</destFilePrefix> -->
                               <!-- <destFileSuffix>-13</destFileSuffix> -->
                                    <process>
                                    {{
                                        files.each { File f ->
                                            assert f.file
                                            def ( body, extension ) = f.name.${splitName}
                                            assert f.renameTo( new File( f.parentFile, "13-$body-13" + ( extension ? '.' + extension : '' )))
                                        }
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/14</targetPath>
                                    <directory>${outputDir}/pl-513-2/10</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                               <!-- <destFilePrefix>14-</destFilePrefix> -->
                               <!-- <destFileSuffix>-14</destFileSuffix> -->
                               <!-- <destFileExtension>14</destFileExtension> -->
                                    <process>
                                    {{
                                        files.each { File f ->
                                            assert f.file
                                            def ( body, extension ) = f.name.${splitName}
                                            assert f.renameTo( new File( f.parentFile, "14-$body-14.14" ))
                                        }
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/15</targetPath>
                                    <directory>${outputDir}/pl-513-2/10</directory>
                                    <verbose>false</verbose>
                               <!-- <destFilePrefix>15-</destFilePrefix> -->
                               <!-- <destFileSuffix>-15</destFileSuffix> -->
                               <!-- <destFileExtension>15</destFileExtension> -->
                                    <process>
                                    {{
                                        files.each { File f ->
                                            assert f.file
                                            def ( body, extension ) = f.name.${splitName}
                                            assert f.renameTo( new File( f.parentFile, "15-$body-15.15" ))
                                        }
                                    }}
                                    </process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-513-2/16</targetPath>
                                    <directory>${outputDir}/pl-513-2/10</directory>
                                    <verbose>false</verbose>
                               <!-- <destFileName>destFileName</destFileName> -->
                               <!-- <destFilePrefix>16-</destFilePrefix> -->
                               <!-- <destFileSuffix>-16</destFileSuffix> -->
                               <!-- <destFileExtension>16</destFileExtension> -->
                                    <process>
                                    {{
                                        files.each { File f ->
                                            assert f.file
                                            assert new File( f.parentFile, 'destFileName' ).with{ (( ! file ) || delete()) &amp;&amp; f.renameTo( delegate )}
                                        }
                                    }}
                                    </process>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-493                    -->
                    <!-- "Avoid unpacking files that have been unpacked by a previous run" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-493-1</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <skipUnpacked>true</skipUnpacked>
                            <resources>
                                <resource>
                                    <description>unpack-groovy-1</description>
                                    <targetPath>${outputDir}/pl-493/unpack</targetPath>
                                    <dependency>
                                        <groupId>org.codehaus.groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                        <version>1.9.0-beta-4</version>
                                    </dependency>
                                    <dependenciesAtM2>true</dependenciesAtM2>
                                    <unpack>true</unpack>
                                    <process>{{ assert files.size() == 3759 }}</process>
                                </resource>
                                <resource>
                                    <description>unpack-groovy-2</description>
                                    <targetPath>${outputDir}/pl-493/unpack</targetPath>
                                    <dependency>
                                        <groupId>org.codehaus.groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                        <version>1.9.0-beta-4</version>
                                    </dependency>
                                    <dependenciesAtM2>true</dependenciesAtM2>
                                    <unpack>true</unpack>
                                    <process>{{ assert (( files.size() == 0 ) &amp;&amp; ( file == null )) }}</process>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-493-2</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resource>
                                <description>unpack-groovy-3</description>
                                <targetPath>${outputDir}/pl-493/unpack</targetPath>
                                <dependency>
                                    <groupId>org.codehaus.groovy</groupId>
                                    <artifactId>groovy-all</artifactId>
                                    <version>1.9.0-beta-4</version>
                                </dependency>
                                <dependenciesAtM2>true</dependenciesAtM2>
                                <skipUnpacked>true</skipUnpacked>
                                <unpack>true</unpack>
                                <process>{{ assert (( files.size() == 0 ) &amp;&amp; ( file == null )) }}</process>
                            </resource>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-502:                   -->
                    <!-- "Treat <nonFilteredExtensions> for non-replaceable files as well" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-502</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetPath>${outputDir}/pl-502</targetPath>
                                    <dependency>
                                        <groupId>org.codehaus.groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                        <version>1.8.3</version>
                                    </dependency>
                                    <destFileName>groovy-all.jar</destFileName>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-502/1</targetPath>
                                    <file>${outputDir}/pl-502/groovy-all.jar</file>
                                    <unpack>true</unpack>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Copying with and without replaces -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDir}/pl-502/copy-1</targetPath>
                                    <directory>${outputDir}/pl-502/1</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                                    <replace>
                                        <from>.</from>
                                        <to>!</to>
                                    </replace>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-502/copy-2</targetPath>
                                    <directory>${outputDir}/pl-502/1</directory>
                                    <verbose>false</verbose>
                                    <preservePath>true</preservePath>
                                    <replace>
                                        <from>.</from>
                                        <to>!</to>
                                    </replace>
                                    <nonFilteredExtensions>class, xml</nonFilteredExtensions>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Unpacking with and without replaces -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDir}/pl-502/unpack-1</targetPath>
                                    <file>${outputDir}/pl-502/groovy-all.jar</file>
                                    <unpack>true</unpack>
                                    <replace>
                                        <from>.</from>
                                        <to>!</to>
                                    </replace>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-502/unpack-2</targetPath>
                                    <file>${outputDir}/pl-502/groovy-all.jar</file>
                                    <unpack>true</unpack>
                                    <replace>
                                        <from>.</from>
                                        <to>!</to>
                                    </replace>
                                    <nonFilteredExtensions>class, xml</nonFilteredExtensions>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Packing with and without replaces -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDir}/pl-502/pack-1/groovy-all.jar</targetPath>
                                    <directory>${outputDir}/pl-502/1</directory>
                                    <pack>true</pack>
                                    <replace>
                                        <from>.</from>
                                        <to>!</to>
                                    </replace>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-502/pack-1/unpack</targetPath>
                                    <file>${outputDir}/pl-502/pack-1/groovy-all.jar</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-502/pack-2/groovy-all.jar</targetPath>
                                    <directory>${outputDir}/pl-502/1</directory>
                                    <pack>true</pack>
                                    <replace>
                                        <from>.</from>
                                        <to>!</to>
                                    </replace>
                                    <nonFilteredExtensions>class, xml</nonFilteredExtensions>
                                </resource>
                                <resource>
                                    <targetPath>${outputDir}/pl-502/pack-2/unpack</targetPath>
                                    <file>${outputDir}/pl-502/pack-2/groovy-all.jar</file>
                                    <unpack>true</unpack>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.goldin.plugins</groupId>
                <artifactId>maven-assert-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-515 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-515</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDir}/pl-515/4/1.BaT
                                ${outputDir}/pl-515/5/opa-1-apo.bAt
                            </assertFiles>
                            <assertGroovy>
                                new File( outputDir, 'pl-515/1/1.bat' ).text.contains( '@echo off' )
                                new File( outputDir, 'pl-515/1/1.bat' ).text.contains( '$' + '{' )

                              ! new File( outputDir, 'pl-515/2/1.bat' ).text.contains( '$' + '{' )
                                new File( outputDir, 'pl-515/2/1.bat' ).text.contains( '[${project.groupId}:${project.artifactId}:${project.version}]' )
                                new File( outputDir, 'pl-515/2/1.bat' ).text.contains( '[' + project.groupId + ':' + project.artifactId + ':' + project.version + ']' )

                                new File( outputDir, 'pl-515/3/1.bat' ).text.contains( '$' + '{' )
                                new File( outputDir, 'pl-515/4/1.BaT' ).text.contains( '$' + '{' )

                              ! new File( outputDir, 'pl-515/5/opa-1-apo.bAt' ).text.contains( '$' + '{' )
                                new File( outputDir, 'pl-515/5/opa-1-apo.bAt' ).text.contains( '[${project.groupId}:${project.artifactId}:${project.version}]' )
                                new File( outputDir, 'pl-515/5/opa-1-apo.bAt' ).text.contains( '[' + project.groupId + ':' + project.artifactId + ':' + project.version + ']' )
                            </assertGroovy>
                            <assertEqual>
                                ${outputDir}/pl-515/1|${outputDir}/pl-515/3
                                ${outputDir}/pl-515/3|${outputDir}/pl-515/4
                            </assertEqual>
                            <shouldFailAssertEqual>
                                ${outputDir}/pl-515/2|${outputDir}/pl-515/5
                                <!-- http://evgeny-goldin.org/youtrack/issue/pl-525 -->
                                <!-- ${outputDir}/pl-515/3|${outputDir}/pl-515/4    -->
                            </shouldFailAssertEqual>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-514 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-514</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertGroovy>
                              ! new File( outputDir, 'pl-514/1/pom.xml' ).text.contains( '$' + '{' )
                                new File( outputDir, 'pl-514/1/pom.xml' ).text.find( /\d|\w/ )
                                new File( outputDir, 'pl-514/2/pom.xml' ).text ==~ /^a+$/
                                new File( outputDir, 'pl-514/3/pom.xml' ).text.with{ ! ( contains( '$' + '{' ) || find( /\d|\w/ )) }

                              ! new File( outputDir, 'pl-514/4/pom.xml' ).text.contains( '$' + '{' )
                                new File( outputDir, 'pl-514/4/pom.xml' ).text.find( /\d|\w/ )
                                new File( outputDir, 'pl-514/5/pom.xml' ).text ==~ /^a+$/
                                new File( outputDir, 'pl-514/6/pom.xml' ).text.with{ ! ( contains( '$' + '{' ) || find( /\d|\w/ )) }

                              ! new File( outputDir, 'pl-514/10/pom.xml' ).text.contains( '$' + '{' )
                                new File( outputDir, 'pl-514/10/pom.xml' ).text.find( /\d|\w/ )
                                new File( outputDir, 'pl-514/11/pom.xml' ).text ==~ /^a+$/
                                new File( outputDir, 'pl-514/12/pom.xml' ).text.with{ ! ( contains( '$' + '{' ) || find( /\d|\w/ )) }
                            </assertGroovy>
                            <assertEqual>
                                ${outputDir}/pl-514/1|${outputDir}/pl-514/4
                                ${outputDir}/pl-514/2|${outputDir}/pl-514/5
                                ${outputDir}/pl-514/3|${outputDir}/pl-514/6
                                ${outputDir}/pl-514/4|${outputDir}/pl-514/10
                                ${outputDir}/pl-514/5|${outputDir}/pl-514/11
                                ${outputDir}/pl-514/6|${outputDir}/pl-514/12
                            </assertEqual>
                            <shouldFailAssertFiles>
                                ${outputDir}/pl-514/7/pom.xml
                                ${outputDir}/pl-514/8/pom.xml
                                ${outputDir}/pl-514/9/pom.xml
                            </shouldFailAssertFiles>
                            <shouldFailAssertEqual>
                                ${outputDir}/pl-514/7|${outputDir}/pl-514/10
                                ${outputDir}/pl-514/8|${outputDir}/pl-514/11
                                ${outputDir}/pl-514/9|${outputDir}/pl-514/12
                            </shouldFailAssertEqual>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-511 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-511</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertEqual>
                                ${outputDir}/pl-511/1|${outputDir}/pl-511/2
                                ${outputDir}/pl-511/2|${outputDir}/pl-511/3
                                ${outputDir}/pl-511/3|${outputDir}/pl-511/1

                                ${outputDir}/pl-511/1|${outputDir}/pl-511/2|1.xml
                                ${outputDir}/pl-511/2|${outputDir}/pl-511/3|1.xml
                                ${outputDir}/pl-511/3|${outputDir}/pl-511/1|1.xml

                                ${outputDir}/pl-511/1|${outputDir}/pl-511/2|*.xml
                                ${outputDir}/pl-511/2|${outputDir}/pl-511/3|*.xml
                                ${outputDir}/pl-511/3|${outputDir}/pl-511/1|*.xml

                                ${outputDir}/pl-511/1|${outputDir}/pl-511/2|**/*.xml
                                ${outputDir}/pl-511/2|${outputDir}/pl-511/3|**/*.xml
                                ${outputDir}/pl-511/3|${outputDir}/pl-511/1|**/*.xml
                            </assertEqual>
                            <shouldFailAssertEqual>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Non-matching patterns should fail -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                ${outputDir}/pl-511/1|${outputDir}/pl-511/2|2.xml
                                ${outputDir}/pl-511/2|${outputDir}/pl-511/3|2.xml
                                ${outputDir}/pl-511/3|${outputDir}/pl-511/1|2.xml

                                ${outputDir}/pl-511/1|${outputDir}/pl-511/2|*.ppt
                                ${outputDir}/pl-511/2|${outputDir}/pl-511/3|*.ppt
                                ${outputDir}/pl-511/3|${outputDir}/pl-511/1|*.ppt

                                ${outputDir}/pl-511/1|${outputDir}/pl-511/2|**/*.exe
                                ${outputDir}/pl-511/2|${outputDir}/pl-511/3|**/*.exe
                                ${outputDir}/pl-511/3|${outputDir}/pl-511/1|**/*.exe
                            </shouldFailAssertEqual>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-522 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-522</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <shouldFailAssertEqual>
                                ${outputDir}/pl-522/2|${outputDir}/pl-522/3
                            </shouldFailAssertEqual>
                            <assertGroovy>
                                new File( outputDir, 'pl-522/2' ).listFiles().size() == 2
                                new File( outputDir, 'pl-522/2' ).recurse([ type: groovy.io.FileType.FILES ], { assert it.file }).size() == 2
                                new File( outputDir, 'pl-522/3' ).recurse([ type: groovy.io.FileType.FILES ], { assert it.file }).size() == 16
                                new File( outputDir, 'pl-522/3' ).recurse([ type: groovy.io.FileType.FILES, returnList: false ], { assert it.file }).size() == 0
                            </assertGroovy>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-510 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-510</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertEqual>
                                ${outputDir}/pl-510/1|${outputDir}/pl-510/2
                                ${outputDir}/pl-510/1|${outputDir}/pl-510/2|**/*.class
                                ${outputDir}/pl-510/1|${outputDir}/pl-510/2|**/*.xml
                            </assertEqual>
                            <assertGroovy>
                                new File( outputDir, 'pl-510/1' ).directorySize() == 13550506
                                new File( outputDir, 'pl-510/2' ).directorySize() == 13550506
                                new File( outputDir, 'pl-510/3' ).directorySize() == 13324310
                                new File( outputDir, 'pl-510/4' ).directorySize() == 44272143
                                new File( outputDir, 'pl-510/5' ).directorySize() == 28547406
                            </assertGroovy>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-516 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-516</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDir}/pl-516/1/*.txt
                                ${outputDir}/pl-516/1/0.txt
                                ${outputDir}/pl-516/1/1.txt
                                ${outputDir}/pl-516/1/2.txt
                                ${outputDir}/pl-516/1/3.txt

                                ${outputDir}/pl-516/2/*.txt
                                ${outputDir}/pl-516/2/0.txt
                                ${outputDir}/pl-516/2/1.txt
                                ${outputDir}/pl-516/2/2.txt
                                ${outputDir}/pl-516/2/3.txt

                                ${outputDir}/pl-516/3/*.txt
                                ${outputDir}/pl-516/3/0.txt
                                ${outputDir}/pl-516/3/1.txt
                                ${outputDir}/pl-516/3/2.txt
                                ${outputDir}/pl-516/3/3.txt
                            </assertFiles>
                            <assertEqual>
                                ${outputDir}/pl-516/1|${outputDir}/pl-516/2
                                ${outputDir}/pl-516/2|${outputDir}/pl-516/3
                                ${outputDir}/pl-516/3|${outputDir}/pl-516/1
                            </assertEqual>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-513 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-513</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDir}/pl-513-1/1/1-pom-1.xml
                                ${outputDir}/pl-513-1/2/2-pom.xml
                                ${outputDir}/pl-513-1/3/pom-3.xml
                                ${outputDir}/pl-513-1/4/pom.4
                                ${outputDir}/pl-513-1/5/5-pom-5.xml
                                ${outputDir}/pl-513-1/6/pom-6.6
                                ${outputDir}/pl-513-1/7/7-pom-7.7
                                ${outputDir}/pl-513-1/8/8-1-8.8
                                ${outputDir}/pl-513-1/8/8-2-8.8
                                ${outputDir}/pl-513-1/8/8-3-8.8
                                ${outputDir}/pl-513-1/8/8-4-8.8
                                ${outputDir}/pl-513-1/8/8-ftp-exclude-8.8
                                ${outputDir}/pl-513-1/8/8-ftp-include-8.8
                                ${outputDir}/pl-513-1/9/9-1-9
                                ${outputDir}/pl-513-1/9/9-2-9
                                ${outputDir}/pl-513-1/9/9-3-9
                                ${outputDir}/pl-513-1/9/9-4-9
                                ${outputDir}/pl-513-1/9/9-ftp-exclude-9
                                ${outputDir}/pl-513-1/9/9-ftp-include-9
                                ${outputDir}/pl-513-1/16/destFileName
                            </assertFiles>
                            <assertGroovy>
                                new File( outputDir, 'pl-513-1/8' ).directorySize() == 69
                                new File( outputDir, 'pl-513-1/9' ).directorySize() == 69
                                new File( outputDir, 'pl-513-1/8' ).directorySize() == new File( outputDir, 'pl-513-1/9'  ).directorySize()

                                [ 10, 11, 12, 13, 14 ].every{ new File( outputDir, "pl-513-1/$it" ).directorySize() == 302093 }
                                new File( outputDir, 'pl-513-1/15' ).directorySize() == 294372

                                null == new File( outputDir, 'pl-513-1/10' ).eachFileRecurse{ assert it.with{ directory || ( file &amp;&amp; name.endsWith( '.class'    )) }}
                                null == new File( outputDir, 'pl-513-1/11' ).eachFileRecurse{ assert it.with{ directory || ( file &amp;&amp; name.startsWith( '11-'     )) }}
                                null == new File( outputDir, 'pl-513-1/12' ).eachFileRecurse{ assert it.with{ directory || ( file &amp;&amp; name.endsWith( '-12.class' )) }}
                                null == new File( outputDir, 'pl-513-1/13' ).eachFileRecurse{ assert it.with{ directory || ( file &amp;&amp; name.with{ startsWith( '13-' ) &amp;&amp; endsWith( '-13.class' ) } ) }}
                                null == new File( outputDir, 'pl-513-1/14' ).eachFileRecurse{ assert it.with{ directory || ( file &amp;&amp; name.with{ startsWith( '14-' ) &amp;&amp; endsWith( '-14.14'    ) } ) }}

                                new File( outputDir, 'pl-513-1/15' ).listFiles().size() == 99
                                new File( outputDir, 'pl-513-1/15' ).listFiles().every{ it.with{ file &amp;&amp; name.with{ startsWith( '15-' ) &amp;&amp; endsWith( '-15.15' ) }}}

                                new File( outputDir, 'pl-513-1/16' ).listFiles().size() == 1
                            </assertGroovy>
                            <shouldFailAssertEqual>
                                ${outputDir}/pl-513-1/8 |${outputDir}/pl-513-1/9
                                ${outputDir}/pl-513-1/10|${outputDir}/pl-513-1/11
                                ${outputDir}/pl-513-1/11|${outputDir}/pl-513-1/12
                                ${outputDir}/pl-513-1/10|${outputDir}/pl-513-1/12
                            </shouldFailAssertEqual>
                            <assertEqual>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Folders "15" and "16" are different due to <process> files re-ordering: -->
                                <!-- we have files of different sizes copied to the same destination         -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                ${outputDir}/pl-513-1/1 |${outputDir}/pl-513-2/1
                                ${outputDir}/pl-513-1/2 |${outputDir}/pl-513-2/2
                                ${outputDir}/pl-513-1/3 |${outputDir}/pl-513-2/3
                                ${outputDir}/pl-513-1/4 |${outputDir}/pl-513-2/4
                                ${outputDir}/pl-513-1/5 |${outputDir}/pl-513-2/5
                                ${outputDir}/pl-513-1/6 |${outputDir}/pl-513-2/6
                                ${outputDir}/pl-513-1/7 |${outputDir}/pl-513-2/7
                                ${outputDir}/pl-513-1/8 |${outputDir}/pl-513-2/8
                                ${outputDir}/pl-513-1/9 |${outputDir}/pl-513-2/9
                                ${outputDir}/pl-513-1/10|${outputDir}/pl-513-2/10
                                ${outputDir}/pl-513-1/11|${outputDir}/pl-513-2/11
                                ${outputDir}/pl-513-1/12|${outputDir}/pl-513-2/12
                                ${outputDir}/pl-513-1/13|${outputDir}/pl-513-2/13
                                ${outputDir}/pl-513-1/14|${outputDir}/pl-513-2/14
                            </assertEqual>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-502 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-502</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertEqual>
                                <!-- No replaces -->
                                ${outputDir}/pl-502/1|${outputDir}/pl-502/copy-2|**/*.class
                                ${outputDir}/pl-502/1|${outputDir}/pl-502/copy-2|**/*.xml
                                ${outputDir}/pl-502/copy-2|${outputDir}/pl-502/unpack-2|**/*.class
                                ${outputDir}/pl-502/copy-2|${outputDir}/pl-502/unpack-2|**/*.xml
                                ${outputDir}/pl-502/unpack-2|${outputDir}/pl-502/pack-2/unpack|**/*.class
                                ${outputDir}/pl-502/unpack-2|${outputDir}/pl-502/pack-2/unpack|**/*.xml
                                ${outputDir}/pl-502/pack-2/unpack|${outputDir}/pl-502/1|**/*.class
                                ${outputDir}/pl-502/pack-2/unpack|${outputDir}/pl-502/1|**/*.xml
                                <!-- Replaces -->
                                ${outputDir}/pl-502/copy-1|${outputDir}/pl-502/unpack-1
                                ${outputDir}/pl-502/unpack-1|${outputDir}/pl-502/pack-1/unpack
                                ${outputDir}/pl-502/pack-1/unpack|${outputDir}/pl-502/copy-1
                            </assertEqual>
                            <shouldFailAssertEqual>
                                <!-- Non-matching patterns -->
                                ${outputDir}/pl-502/1|${outputDir}/pl-502/copy-2|*.class
                                ${outputDir}/pl-502/1|${outputDir}/pl-502/copy-2|**/*.ppt
                                <!-- Replaced vs. non-replaced files -->
                                ${outputDir}/pl-502/copy-1|${outputDir}/pl-502/copy-2
                                ${outputDir}/pl-502/copy-1|${outputDir}/pl-502/copy-2|**/*.class
                                ${outputDir}/pl-502/unpack-1|${outputDir}/pl-502/unpack-2
                                ${outputDir}/pl-502/unpack-1|${outputDir}/pl-502/unpack-2|**/*.class
                                ${outputDir}/pl-502/pack-1/unpack|${outputDir}/pl-502/pack-2/unpack
                                ${outputDir}/pl-502/pack-1/unpack|${outputDir}/pl-502/pack-2/unpack|**/*.class
                            </shouldFailAssertEqual>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
