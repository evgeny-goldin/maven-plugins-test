<?xml version="1.0" encoding="UTF-8"?>

<project xmlns              = "http://maven.apache.org/POM/4.0.0"
         xmlns:xsi          = "http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0
                               http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.goldin.maven-plugins-test</groupId>
    <artifactId>copy-maven-plugin.pack-unpack</artifactId>
    <packaging>jar</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>[${project.groupId}:${project.artifactId}:${project.version}]</name>


    <parent>
        <groupId>com.github.goldin.maven-plugins-test</groupId>
        <artifactId>copy-maven-plugin</artifactId>
        <version>0.1-SNAPSHOT</version>
    </parent>


    <build>
        <plugins>

            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>copy-maven-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <execution>
                        <id>test-resource-copy</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <resources>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Unpacking dependencies -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDirectory}/unpack-1</targetPath>
                                    <useTrueZipForUnpack>true</useTrueZipForUnpack>
                                    <dependencies>
                                        <dependency>
                                            <groupId>com.github.goldin</groupId>
                                            <artifactId>gcommons</artifactId>
                                            <version>${gcommons-version}</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>commons-io</groupId>
                                            <artifactId>commons-io</artifactId>
                                            <version>2.0</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>commons-net</groupId>
                                            <artifactId>commons-net</artifactId>
                                            <version>2.0</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.apache.commons</groupId>
                                            <artifactId>commons-exec</artifactId>
                                            <version>1.1</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>com.github.goldin.test</groupId>
                                            <artifactId>image</artifactId>
                                            <version>3</version>
                                            <classifier>abc</classifier>
                                            <type>zip</type>
                                        </dependency>
                                        <dependency>
                                            <groupId>com.github.goldin.test</groupId>
                                            <artifactId>image</artifactId>
                                            <version>4</version>
                                            <classifier>def</classifier>
                                            <type>tar.gz</type>
                                        </dependency>
                                    </dependencies>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack-2</targetPath>
                                    <useTrueZipForUnpack>false</useTrueZipForUnpack>
                                    <dependencies>
                                        <dependency>
                                            <groupId>junit</groupId>
                                            <artifactId>junit</artifactId>
                                            <version>4.8.2</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>ch.qos.logback</groupId>
                                            <artifactId>logback-classic</artifactId>
                                            <version>0.9.29</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.slf4j</groupId>
                                            <artifactId>slf4j-api</artifactId>
                                            <version>1.6.2</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.apache.ant</groupId>
                                            <artifactId>ant-commons-net</artifactId>
                                            <version>1.8.2</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.codehaus.groovy</groupId>
                                            <artifactId>groovy-all</artifactId>
                                            <version>1.9.0-beta-2</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.codehaus.groovy</groupId>
                                            <artifactId>groovy-all</artifactId>
                                            <version>1.8.2</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.codehaus.groovy</groupId>
                                            <artifactId>groovy-all</artifactId>
                                            <version>1.7.10</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.springframework</groupId>
                                            <artifactId>spring-context</artifactId>
                                            <version>3.0.6.RELEASE</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.springframework</groupId>
                                            <artifactId>spring-core</artifactId>
                                            <version>3.0.6.RELEASE</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.springframework</groupId>
                                            <artifactId>spring-beans</artifactId>
                                            <version>3.0.6.RELEASE</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.springframework</groupId>
                                            <artifactId>spring-test</artifactId>
                                            <version>3.0.6.RELEASE</version>
                                        </dependency>
                                        <dependency>
                                            <groupId>de.schlichtherle</groupId>
                                            <artifactId>truezip</artifactId>
                                            <version>6.8.2</version>
                                        </dependency>
                                    </dependencies>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack-3</targetPath>
                                    <useTrueZipForUnpack>true</useTrueZipForUnpack>
                                    <dependencies>
                                        <dependency>
                                            <groupId>org.jenkins-ci.main</groupId>
                                            <artifactId>jenkins-war</artifactId>
                                            <version>${jenkins-version}</version>
                                            <type>war</type>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.jvnet.hudson.plugins</groupId>
                                            <artifactId>greenballs</artifactId>
                                            <version>1.6</version>
                                            <type>hpi</type>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.jenkins-ci.plugins</groupId>
                                            <artifactId>artifactory</artifactId>
                                            <version>2.0.2</version>
                                            <type>hpi</type>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.artifactory</groupId>
                                            <artifactId>artifactory-web-war</artifactId>
                                            <version>${artifactory-version}</version>
                                            <type>war</type>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.apache.maven</groupId>
                                            <artifactId>apache-maven</artifactId>
                                            <version>2.2.1</version>
                                            <classifier>bin</classifier>
                                            <type>zip</type>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.apache.maven</groupId>
                                            <artifactId>apache-maven</artifactId>
                                            <version>3.0.3</version>
                                            <classifier>bin</classifier>
                                            <type>zip</type>
                                        </dependency>
                                    </dependencies>
                                    <unpack>true</unpack>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~ -->
                                <!-- Packing files back -->
                                <!-- ~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <useTrueZipForPack>false</useTrueZipForPack>
                                    <targetPath>${outputDirectory}/1.zip</targetPath>
                                    <directory>${outputDirectory}/unpack-1</directory>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <useTrueZipForPack>true</useTrueZipForPack>
                                    <targetPath>${outputDirectory}/2.tar.gz</targetPath>
                                    <directory>${outputDirectory}/unpack-2</directory>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <useTrueZipForPack>false</useTrueZipForPack>
                                    <targetPath>${outputDirectory}/3.jar</targetPath>
                                    <directory>${outputDirectory}/unpack-3</directory>
                                    <pack>true</pack>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Unpacking them again -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <useTrueZipForUnpack>false</useTrueZipForUnpack>
                                    <targetPath>${outputDirectory}/unpack-12</targetPath>
                                    <file>${outputDirectory}/1.zip</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <useTrueZipForUnpack>true</useTrueZipForUnpack>
                                    <targetPath>${outputDirectory}/unpack-22</targetPath>
                                    <file>${outputDirectory}/2.tar.gz</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <useTrueZipForUnpack>false</useTrueZipForUnpack>
                                    <targetPath>${outputDirectory}/unpack-32</targetPath>
                                    <file>${outputDirectory}/3.jar</file>
                                    <unpack>true</unpack>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-pack-unpack</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetPaths>
                                        <targetPath>${outputDirectory}/pack/pom.jar</targetPath>
                                        <targetPath>${outputDirectory}/pack/pom.war</targetPath>
                                        <targetPath>${outputDirectory}/pack/pom.ear</targetPath>
                                        <targetPath>${outputDirectory}/pack/pom.sar</targetPath>
                                        <targetPath>${outputDirectory}/pack/pom.zip</targetPath>
                                        <targetPath>${outputDirectory}/pack/pom.hpi</targetPath>
                                        <targetPath>${outputDirectory}/pack/pom.sima</targetPath>
                                        <targetPath>${outputDirectory}/pack/pom.tar</targetPath>
                                        <targetPath>${outputDirectory}/pack/pom.tgz</targetPath>
                                        <targetPath>${outputDirectory}/pack/pom.tar.gz</targetPath>
                                    </targetPaths>
                                    <file>${project.basedir}/pom.xml</file>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/jar</targetPath>
                                    <file>${outputDirectory}/pack/pom.jar</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/war</targetPath>
                                    <file>${outputDirectory}/pack/pom.war</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/ear</targetPath>
                                    <file>${outputDirectory}/pack/pom.ear</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/sar</targetPath>
                                    <file>${outputDirectory}/pack/pom.sar</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/zip</targetPath>
                                    <file>${outputDirectory}/pack/pom.zip</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/hpi</targetPath>
                                    <file>${outputDirectory}/pack/pom.hpi</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/sima</targetPath>
                                    <file>${outputDirectory}/pack/pom.sima</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/tar</targetPath>
                                    <file>${outputDirectory}/pack/pom.tar</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/tgz</targetPath>
                                    <file>${outputDirectory}/pack/pom.tgz</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/unpack/tar.gz</targetPath>
                                    <file>${outputDirectory}/pack/pom.tar.gz</file>
                                    <unpack>true</unpack>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-fullpath-prefix-TrueZip</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <useTrueZipForPack>true</useTrueZipForPack>
                            <useTrueZipForUnpack>true</useTrueZipForUnpack>
                            <resources>
                                <!-- Packing -->
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-TrueZip/fullpath.zip</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>1/2/3/4.txt</destFileName>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-TrueZip/fullpath.tar.gz</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>1/2/3/4.txt</destFileName>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-TrueZip/prefix.zip</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <prefix>a/bb/ccc/dddd</prefix>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-TrueZip/prefix.tar.gz</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <prefix>a/bb/ccc/dddd</prefix>
                                    <pack>true</pack>
                                </resource>
                                <!-- Unpacking -->
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-TrueZip/unpack/fullpath-zip</targetPath>
                                    <file>${outputDirectory}/fullpath-prefix-TrueZip/fullpath.zip</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-TrueZip/unpack/fullpath-tar.gz</targetPath>
                                    <file>${outputDirectory}/fullpath-prefix-TrueZip/fullpath.tar.gz</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-TrueZip/unpack/prefix-zip</targetPath>
                                    <file>${outputDirectory}/fullpath-prefix-TrueZip/prefix.zip</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-TrueZip/unpack/prefix-tar.gz</targetPath>
                                    <file>${outputDirectory}/fullpath-prefix-TrueZip/prefix.tar.gz</file>
                                    <unpack>true</unpack>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-fullpath-prefix-Ant</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <useTrueZipForPack>false</useTrueZipForPack>
                            <useTrueZipForUnpack>false</useTrueZipForUnpack>
                            <resources>
                                <!-- Packing -->
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-Ant/fullpath.zip</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>1/2/3/4.txt</destFileName>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-Ant/fullpath.tar.gz</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <destFileName>1/2/3/4.txt</destFileName>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-Ant/prefix.zip</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <prefix>a/bb/ccc/dddd</prefix>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-Ant/prefix.tar.gz</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <prefix>a/bb/ccc/dddd</prefix>
                                    <pack>true</pack>
                                </resource>
                                <!-- Unpacking -->
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-Ant/unpack/fullpath-zip</targetPath>
                                    <file>${outputDirectory}/fullpath-prefix-Ant/fullpath.zip</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-Ant/unpack/fullpath-tar.gz</targetPath>
                                    <file>${outputDirectory}/fullpath-prefix-Ant/fullpath.tar.gz</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-Ant/unpack/prefix-zip</targetPath>
                                    <file>${outputDirectory}/fullpath-prefix-Ant/prefix.zip</file>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/fullpath-prefix-Ant/unpack/prefix-tar.gz</targetPath>
                                    <file>${outputDirectory}/fullpath-prefix-Ant/prefix.tar.gz</file>
                                    <unpack>true</unpack>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-filemode</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <runIf>{{ ${isLinux} || ${isMac} }}</runIf>
                            <resources>
                                <resource>
                                    <targetPaths>
                                        <targetPath>${outputDirectory}/filemode/1</targetPath>
                                        <targetPath>${outputDirectory}/filemode/2</targetPath>
                                    </targetPaths>
                                    <mkdir>true</mkdir>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/filemode/1.tar.gz</targetPath>
                                    <directory>${project.basedir}/../issues/0.2/0.2-beta-2/src/main/resources</directory>
                                    <include>*.xml|731, *.bat|755, *.txt|700</include>
                                    <pack>true</pack>
                                    <process>{{ "tar -xzf ${outputDirectory}/filemode/1.tar.gz -C ${outputDirectory}/filemode/1".execute().text }}</process>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/filemode/2.tar.gz</targetPath>
                                    <directory>${project.basedir}/../issues/0.2/0.2-beta-2/src/main/resources</directory>
                                    <includes>
                                        <include>*.xml|555</include>
                                        <include>*.bat|331</include>
                                        <include>*.txt|111</include>
                                    </includes>
                                    <pack>true</pack>
                                    <process>{{ "tar -xzf ${outputDirectory}/filemode/2.tar.gz -C ${outputDirectory}/filemode/2".execute().text }}</process>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>assert-maven-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <execution>
                        <id>assert-dependency-copy</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertGroovy>
                                new File( outputDirectory, 'unpack-2'  ).directorySize() == 19921721
                                new File( outputDirectory, 'unpack-22' ).directorySize() == 19921721
                                new File( outputDirectory, 'unpack-3'  ).directorySize() == 84699618
                                new File( outputDirectory, 'unpack-32' ).directorySize() == 84699618
                            </assertGroovy>
                            <assertEqual>
                                ${outputDirectory}/unpack-1|${outputDirectory}/unpack-12
                                ${outputDirectory}/unpack-2|${outputDirectory}/unpack-22
                                ${outputDirectory}/unpack-3|${outputDirectory}/unpack-32
                            </assertEqual>
                        </configuration>
                    </execution>
                    <execution>
                        <id>assert-pack-unpack</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDirectory}/pack/pom.jar
                                ${outputDirectory}/pack/pom.war
                                ${outputDirectory}/pack/pom.ear
                                ${outputDirectory}/pack/pom.sar
                                ${outputDirectory}/pack/pom.zip
                                ${outputDirectory}/pack/pom.hpi
                                ${outputDirectory}/pack/pom.sima
                                ${outputDirectory}/pack/pom.tar
                                ${outputDirectory}/pack/pom.tgz
                                ${outputDirectory}/pack/pom.tar.gz

                                ${outputDirectory}/unpack/jar/pom.xml
                                ${outputDirectory}/unpack/war/pom.xml
                                ${outputDirectory}/unpack/ear/pom.xml
                                ${outputDirectory}/unpack/sar/pom.xml
                                ${outputDirectory}/unpack/zip/pom.xml
                                ${outputDirectory}/unpack/hpi/pom.xml
                                ${outputDirectory}/unpack/sima/pom.xml
                                ${outputDirectory}/unpack/tar/pom.xml
                                ${outputDirectory}/unpack/tgz/pom.xml
                                ${outputDirectory}/unpack/tar.gz/pom.xml
                            </assertFiles>
                            <assertEqual>
                                ${outputDirectory}/unpack/jar |${outputDirectory}/unpack/war
                                ${outputDirectory}/unpack/war |${outputDirectory}/unpack/ear
                                ${outputDirectory}/unpack/ear |${outputDirectory}/unpack/sar
                                ${outputDirectory}/unpack/sar |${outputDirectory}/unpack/zip
                                ${outputDirectory}/unpack/zip |${outputDirectory}/unpack/hpi
                                ${outputDirectory}/unpack/hpi |${outputDirectory}/unpack/sima
                                ${outputDirectory}/unpack/sima |${outputDirectory}/unpack/tar
                                ${outputDirectory}/unpack/tar |${outputDirectory}/unpack/tgz
                                ${outputDirectory}/unpack/tgz |${outputDirectory}/unpack/tar.gz
                                ${outputDirectory}/unpack/tar.gz|${outputDirectory}/unpack/jar
                            </assertEqual>
                        </configuration>
                    </execution>
                    <execution>
                        <id>assert-fullpath-prefix</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDirectory}/fullpath-prefix-TrueZip/unpack/fullpath-zip/1/2/3/4.txt
                                ${outputDirectory}/fullpath-prefix-TrueZip/unpack/fullpath-tar.gz/1/2/3/4.txt
                                ${outputDirectory}/fullpath-prefix-TrueZip/unpack/prefix-zip/a/bb/ccc/dddd/pom.xml
                                ${outputDirectory}/fullpath-prefix-TrueZip/unpack/prefix-tar.gz/a/bb/ccc/dddd/pom.xml

                                ${outputDirectory}/fullpath-prefix-Ant/unpack/fullpath-zip/1/2/3/4.txt
                                ${outputDirectory}/fullpath-prefix-Ant/unpack/fullpath-tar.gz/1/2/3/4.txt
                                ${outputDirectory}/fullpath-prefix-Ant/unpack/prefix-zip/a/bb/ccc/dddd/pom.xml
                                ${outputDirectory}/fullpath-prefix-Ant/unpack/prefix-tar.gz/a/bb/ccc/dddd/pom.xml
                            </assertFiles>
                            <assertEqual>
                                ${outputDirectory}/fullpath-prefix-TrueZip/unpack/fullpath-zip/1/2/3/4.txt|${outputDirectory}/fullpath-prefix-TrueZip/unpack/fullpath-tar.gz/1/2/3/4.txt
                                ${outputDirectory}/fullpath-prefix-TrueZip/unpack/fullpath-tar.gz/1/2/3/4.txt|${outputDirectory}/fullpath-prefix-TrueZip/unpack/prefix-zip/a/bb/ccc/dddd/pom.xml
                                ${outputDirectory}/fullpath-prefix-TrueZip/unpack/prefix-zip/a/bb/ccc/dddd/pom.xml|${outputDirectory}/fullpath-prefix-TrueZip/unpack/prefix-tar.gz/a/bb/ccc/dddd/pom.xml
                                ${outputDirectory}/fullpath-prefix-TrueZip/unpack/prefix-tar.gz/a/bb/ccc/dddd/pom.xml|${outputDirectory}/fullpath-prefix-Ant/unpack/fullpath-zip/1/2/3/4.txt

                                ${outputDirectory}/fullpath-prefix-Ant/unpack/fullpath-zip/1/2/3/4.txt|${outputDirectory}/fullpath-prefix-Ant/unpack/fullpath-tar.gz/1/2/3/4.txt
                                ${outputDirectory}/fullpath-prefix-Ant/unpack/fullpath-tar.gz/1/2/3/4.txt|${outputDirectory}/fullpath-prefix-Ant/unpack/prefix-zip/a/bb/ccc/dddd/pom.xml
                                ${outputDirectory}/fullpath-prefix-Ant/unpack/prefix-zip/a/bb/ccc/dddd/pom.xml|${outputDirectory}/fullpath-prefix-Ant/unpack/prefix-tar.gz/a/bb/ccc/dddd/pom.xml
                                ${outputDirectory}/fullpath-prefix-Ant/unpack/prefix-tar.gz/a/bb/ccc/dddd/pom.xml|${outputDirectory}/fullpath-prefix-TrueZip/unpack/fullpath-zip/1/2/3/4.txt

                                ${outputDirectory}/fullpath-prefix-TrueZip|${outputDirectory}/fullpath-prefix-Ant|**/*.txt
                                ${outputDirectory}/fullpath-prefix-TrueZip|${outputDirectory}/fullpath-prefix-Ant|**/*.xml
                            </assertEqual>
                            <shouldFailAssertEqual>
                                ${outputDirectory}/fullpath-prefix-TrueZip|${outputDirectory}/fullpath-prefix-Ant|*.txt
                                ${outputDirectory}/fullpath-prefix-TrueZip|${outputDirectory}/fullpath-prefix-Ant|*.xml
                            </shouldFailAssertEqual>
                        </configuration>
                    </execution>
                    <execution>
                        <id>assert-filemode</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <runIf>{{ ${isLinux} || ${isMac} }}</runIf>
                            <assertFiles>
                                ${outputDirectory}/filemode/
                                ${outputDirectory}/filemode/1
                                ${outputDirectory}/filemode/2
                                ${outputDirectory}/filemode/1/pom-UTF-8.xml
                                ${outputDirectory}/filemode/1/start-gmi-1.bat
                                ${outputDirectory}/filemode/1/start-gmi-2.bat
                                ${outputDirectory}/filemode/1/text-Windows-1251.txt
                                ${outputDirectory}/filemode/2/pom-UTF-8.xml
                                ${outputDirectory}/filemode/2/start-gmi-1.bat
                                ${outputDirectory}/filemode/2/start-gmi-2.bat
                                ${outputDirectory}/filemode/2/text-Windows-1251.txt
                                ${outputDirectory}/filemode/1.tar.gz
                                ${outputDirectory}/filemode/2.tar.gz
                            </assertFiles>
                            <assertGroovy>
                                'ls -l ${outputDirectory}/filemode/1/pom-UTF-8.xml'.        execute().text.startsWith( '-rwx-wx--x' ) <!-- 731 -->
                                'ls -l ${outputDirectory}/filemode/1/start-gmi-1.bat'.      execute().text.startsWith( '-rwxr-xr-x' ) <!-- 755 -->
                                'ls -l ${outputDirectory}/filemode/1/start-gmi-2.bat'.      execute().text.startsWith( '-rwxr-xr-x' ) <!-- 755 -->
                                'ls -l ${outputDirectory}/filemode/1/text-Windows-1251.txt'.execute().text.startsWith( '-rwx------' ) <!-- 700 -->
                                'ls -l ${outputDirectory}/filemode/2/pom-UTF-8.xml'.        execute().text.startsWith( '-r-xr-xr-x' ) <!-- 555 -->
                                'ls -l ${outputDirectory}/filemode/2/start-gmi-1.bat'.      execute().text.startsWith( '--wx-wx--x' ) <!-- 331 -->
                                'ls -l ${outputDirectory}/filemode/2/start-gmi-2.bat'.      execute().text.startsWith( '--wx-wx--x' ) <!-- 331 -->
                                'ls -l ${outputDirectory}/filemode/2/text-Windows-1251.txt'.execute().text.startsWith( '---x--x--x' ) <!-- 111 -->
                            </assertGroovy>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
