<?xml version="1.0" encoding="UTF-8"?>

<project xmlns              = "http://maven.apache.org/POM/4.0.0"
         xmlns:xsi          = "http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0
                               http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.goldin.maven-plugins-test</groupId>
    <artifactId>copy-maven-plugin.issues.0.2-beta-2</artifactId>
    <packaging>jar</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>[${project.groupId}:${project.artifactId}:${project.version}]</name>


    <parent>
        <groupId>com.github.goldin.maven-plugins-test</groupId>
        <artifactId>copy-maven-plugin.issues.0.2</artifactId>
        <version>0.1-SNAPSHOT</version>
    </parent>


    <properties>
        <resourcesDir>${project.basedir}/src/main/resources</resourcesDir>
        <testProperty>testContent</testProperty>
        <anotherTestProperty>anotherTestContent</anotherTestProperty>
    </properties>


    <build>
        <plugins>

            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>copy-maven-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-215: "Dependencies unpack doesn't filter unpacked files" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-215</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-215/jar</targetPath>
                                    <file>${resourcesDir}/apache-maven-3.0.1.zip</file>
                                    <filter>files.findAll{ it.name.endsWith( '.jar' ) }</filter>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-215/zip</targetPath>
                                    <file>${resourcesDir}/apache-maven-3.0.1.zip</file>
                                    <filter>files.findAll{ it.name.endsWith( '.zip' ) }</filter>
                                    <unpack>true</unpack>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-214: "Add encoding support to filtering" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-214</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <resources>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Filtering "pom-UTF-8.xml" -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDirectory}/pl-214/pom-default</targetPath>
                                    <file>${resourcesDir}/pom-UTF-8.xml</file>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-214/pom-UTF-8</targetPath>
                                    <file>${resourcesDir}/pom-UTF-8.xml</file>
                                    <encoding>UTF-8</encoding>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-214/pom-ASCII</targetPath>
                                    <file>${resourcesDir}/pom-UTF-8.xml</file>
                                    <encoding>ASCII</encoding>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-214/pom-ISO-8859-1</targetPath>
                                    <file>${resourcesDir}/pom-UTF-8.xml</file>
                                    <encoding>ISO-8859-1</encoding>
                                    <filtering>true</filtering>
                                </resource>
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <!-- Filtering "text-Windows-1251.txt" -->
                                <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                <resource>
                                    <targetPath>${outputDirectory}/pl-214/text-default</targetPath>
                                    <file>${resourcesDir}/text-Windows-1251.txt</file>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-214/text-UTF-8</targetPath>
                                    <file>${resourcesDir}/text-Windows-1251.txt</file>
                                    <encoding>UTF-8</encoding>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-214/text-ASCII</targetPath>
                                    <file>${resourcesDir}/text-Windows-1251.txt</file>
                                    <encoding>ASCII</encoding>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-214/text-ISO-8859-1</targetPath>
                                    <file>${resourcesDir}/text-Windows-1251.txt</file>
                                    <encoding>ISO-8859-1</encoding>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-214/text-Windows-1251</targetPath>
                                    <file>${resourcesDir}/text-Windows-1251.txt</file>
                                    <encoding>Windows-1251</encoding>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-233: "<filtering>true</filtering> doesn't filter *.bat file" -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-233</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <resource>
                                <targetPath>${outputDirectory}/pl-233</targetPath>
                                <directory>${resourcesDir}</directory>
                                <include>*.bat</include>
                                <filtering>true</filtering>
                            </resource>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>assert-maven-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-215 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-215</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDirectory}/pl-215/zip
                                ${outputDirectory}/pl-215/zip/apache-maven-3.0.1/lib/*.jar
                                ${outputDirectory}/pl-215/zip/apache-maven-3.0.1/bin/*.bat
                                ${outputDirectory}/pl-215/zip/apache-maven-3.0.1/conf/*.xml
                                ${outputDirectory}/pl-215/zip/apache-maven-3.0.1/*.txt
                            </assertFiles>
                            <assertGroovy>
                                ! new File( outputDirectory, 'pl-215/jar' ).isDirectory() <!-- Directory should not be created -->
                                  new File( outputDirectory, 'pl-215/zip' ).isDirectory() <!-- Directory should be created -->
                                  new File( outputDirectory, 'pl-215/zip' ).directorySize() == 3344329
                            </assertGroovy>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-214 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-214</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDirectory}/pl-214/pom-default/*.xml
                                ${outputDirectory}/pl-214/pom-default/pom-UTF-8.xml
                                ${outputDirectory}/pl-214/pom-UTF-8/*.xml
                                ${outputDirectory}/pl-214/pom-UTF-8/pom-UTF-8.xml
                                ${outputDirectory}/pl-214/pom-ASCII/*.xml
                                ${outputDirectory}/pl-214/pom-ASCII/pom-UTF-8.xml
                                ${outputDirectory}/pl-214/pom-ISO-8859-1/*.xml
                                ${outputDirectory}/pl-214/pom-ISO-8859-1/pom-UTF-8.xml

                                ${outputDirectory}/pl-214/text-default/*.txt
                                ${outputDirectory}/pl-214/text-default/text-Windows-1251.txt
                                ${outputDirectory}/pl-214/text-UTF-8/*.txt
                                ${outputDirectory}/pl-214/text-UTF-8/text-Windows-1251.txt
                                ${outputDirectory}/pl-214/text-ASCII/*.txt
                                ${outputDirectory}/pl-214/text-ASCII/text-Windows-1251.txt
                                ${outputDirectory}/pl-214/text-ISO-8859-1/*.txt
                                ${outputDirectory}/pl-214/text-ISO-8859-1/text-Windows-1251.txt
                                ${outputDirectory}/pl-214/text-Windows-1251/*.txt
                                ${outputDirectory}/pl-214/text-Windows-1251/text-Windows-1251.txt
                            </assertFiles>
                            <assertEqual>
                                ${outputDirectory}/pl-214/pom-default|${outputDirectory}/pl-214/pom-UTF-8
                                ${outputDirectory}/pl-214/pom-UTF-8|${outputDirectory}/pl-214/pom-ASCII
                                ${outputDirectory}/pl-214/pom-ASCII|${outputDirectory}/pl-214/pom-ISO-8859-1
                                ${outputDirectory}/pl-214/pom-ISO-8859-1|${outputDirectory}/pl-214/pom-default

                                ${outputDirectory}/pl-214/text-ISO-8859-1|${outputDirectory}/pl-214/text-Windows-1251
                            </assertEqual>
                            <assertGroovy>
                                new File( outputDirectory, 'pl-214/pom-default/pom-UTF-8.xml' ).size() == new File( outputDirectory,    'pl-214/pom-UTF-8//pom-UTF-8.xml' ).size()
                                new File( outputDirectory, 'pl-214/pom-default/pom-UTF-8.xml' ).size() > new File( resourcesDir, 'pom-UTF-8.xml' ).size()
                              ! new File( outputDirectory, 'pl-214/pom-default/pom-UTF-8.xml' ).text.contains( '$' )

                                new File( outputDirectory, 'pl-214/text-default/text-Windows-1251.txt'      ).size() == 74
                                new File( outputDirectory, 'pl-214/text-UTF-8/text-Windows-1251.txt'        ).size() == 74
                                new File( outputDirectory, 'pl-214/text-ASCII/text-Windows-1251.txt'        ).size() == 32
                                new File( outputDirectory, 'pl-214/text-ISO-8859-1/text-Windows-1251.txt'   ).size() == 32
                                new File( outputDirectory, 'pl-214/text-Windows-1251/text-Windows-1251.txt' ).size() == 32

                                new File( outputDirectory, 'pl-214/text-Windows-1251/text-Windows-1251.txt' ).getText( 'Windows-1251' ).contains( "Что-то, зачем-то"  )
                              ! new File( outputDirectory, 'pl-214/text-Windows-1251/text-Windows-1251.txt' ).getText( 'Windows-1251' ).contains( "Что-то, зачем-то?" )
                                new File( outputDirectory, 'pl-214/text-ISO-8859-1/text-Windows-1251.txt'   ).getText( 'Windows-1251' ).contains( "Что-то, зачем-то"  )
                              ! new File( outputDirectory, 'pl-214/text-ISO-8859-1/text-Windows-1251.txt'   ).getText( 'ISO-8859-1'   ).contains( "Что-то, зачем-то"  )
                              ! new File( outputDirectory, 'pl-214/text-ISO-8859-1/text-Windows-1251.txt'   ).getText( 'Windows-1251' ).contains( "Что-то, зачем-то?" )

                              ! new File( outputDirectory, 'pl-214/text-default/text-Windows-1251.txt' ).getText( 'UTF-8' ).contains( "Что-то, зачем-то" )
                              ! new File( outputDirectory, 'pl-214/text-UTF-8/text-Windows-1251.txt'   ).getText( 'UTF-8' ).contains( "Что-то, зачем-то" )
                              ! new File( outputDirectory, 'pl-214/text-ASCII/text-Windows-1251.txt'   ).getText( 'ASCII' ).contains( "Что-то, зачем-то" )
                            </assertGroovy>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-233 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-233</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDirectory}/pl-233/*.bat
                                ${outputDirectory}/pl-233/start-gmi-1.bat
                                ${outputDirectory}/pl-233/start-gmi-2.bat
                            </assertFiles>
                            <assertGroovy>
                                new File( outputDirectory, 'pl-233/start-gmi-1.bat' ).text == "${testProperty}${anotherTestProperty}${spring-version}"
                                new File( outputDirectory, 'pl-233/start-gmi-2.bat' ).text.contains( '${testProperty}' )
                                new File( outputDirectory, 'pl-233/start-gmi-2.bat' ).text.contains( '${anotherTestProperty}' )
                                new File( outputDirectory, 'pl-233/start-gmi-2.bat' ).text.contains( '${spring-version}' )
                            </assertGroovy>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
