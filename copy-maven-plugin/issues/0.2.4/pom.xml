<?xml version="1.0" encoding="UTF-8"?>

<project xmlns              = "http://maven.apache.org/POM/4.0.0"
         xmlns:xsi          = "http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0
                               http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.goldin.maven-plugins-test</groupId>
    <artifactId>copy-maven-plugin.issues.0.2.4</artifactId>
    <packaging>jar</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>[${project.groupId}:${project.artifactId}:${project.version}]</name>


    <parent>
        <groupId>com.github.goldin.maven-plugins-test</groupId>
        <artifactId>copy-maven-plugin.issues</artifactId>
        <version>0.1-SNAPSHOT</version>
    </parent>


    <build>
        <plugins>

            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Setting a ${timestamp} property to use later -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <execution>
                        <id>set-timestamp-property</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>set-properties</goal>
                        </goals>
                        <configuration>
                            <property>
                                <name>timestamp</name>
                                <value>{{ System.currentTimeMillis() }}</value>
                            </property>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Copying Spring transitive dependencies using standard dependency plugin -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>copy-spring-transitive-dependencies</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${outputDirectory}/pl-550/dependency-plugin</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>copy-maven-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-625 -->
                    <!-- Implement <deploy> with Aether                 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-625</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-625/pom.jar</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <pack>true</pack>
                                    <deploy>http://evgenyg.artifactoryonline.com/evgenyg/tests-local/|${project.groupId}|${project.artifactId}|${timestamp}</deploy>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-625/pom.zip</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                    <pack>true</pack>
                                    <deploy>http://evgenyg.artifactoryonline.com/evgenyg/tests-local/|${project.groupId}|${project.artifactId}|${timestamp}|bin</deploy>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-625/1</targetPath>
                                    <file>${project.basedir}/pom.xml</file>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-625/2</targetPath>
                                    <dependency>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>${project.artifactId}</artifactId>
                                        <version>${timestamp}</version>
                                    </dependency>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-625/3</targetPath>
                                    <dependency>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>${project.artifactId}</artifactId>
                                        <version>${timestamp}</version>
                                        <classifier>bin</classifier>
                                        <type>zip</type>
                                    </dependency>
                                    <unpack>true</unpack>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-617                         -->
                    <!-- Allow to set compression level when Zip archives are created using Ant -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-617</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-617/unpack</targetPath>
                                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                    <!-- Unpacking some heavy dependencies to pack them later with varying compression level -->
                                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                                    <dependencies>
                                        <dependency>
                                            <groupId>org.artifactory</groupId>
                                            <artifactId>artifactory-web-war</artifactId>
                                            <version>${artifactory-version}</version>
                                            <type>war</type>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.jenkins-ci.main</groupId>
                                            <artifactId>jenkins-war</artifactId>
                                            <version>${jenkins-version}</version>
                                            <type>war</type>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.apache.maven</groupId>
                                            <artifactId>apache-maven</artifactId>
                                            <version>${maven-version}</version>
                                            <classifier>bin</classifier>
                                            <type>tar.gz</type>
                                        </dependency>
                                        <dependency>
                                            <groupId>org.apache.maven</groupId>
                                            <artifactId>apache-maven</artifactId>
                                            <version>${maven-version}</version>
                                            <classifier>src</classifier>
                                            <type>tar.gz</type>
                                        </dependency>
                                    </dependencies>
                                    <unpack>true</unpack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-617/1-Ant.tar</targetPath>
                                    <directory>${outputDirectory}/pl-617/unpack</directory>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-617/2-Ant.zip</targetPath>
                                    <directory>${outputDirectory}/pl-617/unpack</directory>
                                    <pack>true</pack>
                                    <compressionLevel>0</compressionLevel>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-617/3-Ant.zip</targetPath>
                                    <directory>${outputDirectory}/pl-617/unpack</directory>
                                    <pack>true</pack>
                                    <compressionLevel>5</compressionLevel>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-617/4-Ant.zip</targetPath>
                                    <directory>${outputDirectory}/pl-617/unpack</directory>
                                    <pack>true</pack>
                                    <compressionLevel>9</compressionLevel>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-617/5-Ant.tar.gz</targetPath>
                                    <directory>${outputDirectory}/pl-617/unpack</directory>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-617/1-TrueZip.tar</targetPath>
                                    <directory>${outputDirectory}/pl-617/unpack</directory>
                                    <useTrueZipForPack>true</useTrueZipForPack>
                                    <pack>true</pack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-617/2-TrueZip.zip</targetPath>
                                    <directory>${outputDirectory}/pl-617/unpack</directory>
                                    <pack>true</pack>
                                    <useTrueZipForPack>true</useTrueZipForPack>
                                </resource>
                                <resource>
                                    <targetPath>${outputDirectory}/pl-617/3-TrueZip.tar.gz</targetPath>
                                    <directory>${outputDirectory}/pl-617/unpack</directory>
                                    <useTrueZipForPack>true</useTrueZipForPack>
                                    <pack>true</pack>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-550                                       -->
                    <!-- Make both <includeScope> and <excludeScope> work together for filtering dependencies -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-550</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <verbose>false</verbose>
                            <resources>
                                <!-- Transitive dependencies from all scopes -->
                                <resource>
                                    <description>all</description>
                                    <targetPath>${outputDirectory}/pl-550/all</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <!-- Not available in Maven repos -->
                                        <excludeGroupIds>com.sun.jmx,com.sun.jdmk</excludeGroupIds>
                                    </dependency>
                                </resource>
                                <!-- Transitive dependencies from all scopes, including optional (yeah, that's big!) -->
                                <resource>
                                    <description>optional-1</description>
                                    <targetPath>${outputDirectory}/pl-550/optional-1</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeOptional>true</includeOptional>
                                        <!-- Not available in Maven repos or there are no jars (only POMs) -->
                                        <excludeGroupIds>ehcache,activation,com.sun.jmx,com.sun.jdmk,com.sun,javax.security,javax.jws,javax.mail,javax.activation</excludeGroupIds>
                                        <excludeArtifactIds>xerces-impl,xml-apis,commons-logging,commons-logging-api,stax-ri,hsqldb</excludeArtifactIds>
                                    </dependency>
                                </resource>
                                <!-- Direct dependencies from all scopes, including optional -->
                                <resource>
                                    <description>optional-2</description>
                                    <targetPath>${outputDirectory}/pl-550/optional-2</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeOptional>true</includeOptional>
                                        <depth>1</depth>
                                    </dependency>
                                </resource>
                                <!-- Direct dependencies from "compile" scope, including optional -->
                                <resource>
                                    <description>optional-3</description>
                                    <targetPath>${outputDirectory}/pl-550/optional-3</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeOptional>true</includeOptional>
                                        <includeScope>compile</includeScope>
                                        <depth>1</depth>
                                    </dependency>
                                </resource>
                                <!-- Single dependency, no transitivity -->
                                <resource>
                                    <description>single</description>
                                    <targetPath>${outputDirectory}/pl-550/single</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                    </dependency>
                                </resource>
                                <!-- Direct dependencies from "compile" scope -->
                                <resource>
                                    <description>single-compile</description>
                                    <targetPath>${outputDirectory}/pl-550/single-compile</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>compile</includeScope>
                                        <depth>1</depth>
                                    </dependency>
                                </resource>
                                <!-- Direct dependencies from "test" scope -->
                                <resource>
                                    <description>single-test</description>
                                    <targetPath>${outputDirectory}/pl-550/single-test</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>test</includeScope>
                                        <depth>1</depth>
                                    </dependency>
                                </resource>
                                <!-- Direct dependencies from "provided" scope -->
                                <resource>
                                    <description>single-provided</description>
                                    <targetPath>${outputDirectory}/pl-550/single-provided</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>provided</includeScope>
                                        <depth>1</depth>
                                    </dependency>
                                </resource>
                                <!-- Transitive dependencies from "compile" scope -->
                                <resource>
                                    <description>1</description>
                                    <targetPath>${outputDirectory}/pl-550/1</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>compile</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive dependencies from "test" scope -->
                                <resource>
                                    <description>2</description>
                                    <targetPath>${outputDirectory}/pl-550/2</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>test</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive dependencies from "provided" scope -->
                                <resource>
                                    <description>3</description>
                                    <targetPath>${outputDirectory}/pl-550/3</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>provided</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive dependencies from "compile" scope, "test" and "provided" excluded -->
                                <resource>
                                    <description>4</description>
                                    <targetPath>${outputDirectory}/pl-550/4</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>compile</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive dependencies from "compile" scope, "test" excluded -->
                                <resource>
                                    <description>5</description>
                                    <targetPath>${outputDirectory}/pl-550/5</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>compile</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive dependencies from "compile" scope, "provided" excluded -->
                                <resource>
                                    <description>6</description>
                                    <targetPath>${outputDirectory}/pl-550/6</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>compile</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive dependencies from "test" scope, "compile" excluded -->
                                <resource>
                                    <description>7</description>
                                    <targetPath>${outputDirectory}/pl-550/7</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>test</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive dependencies from "provided" scope, "compile" excluded -->
                                <resource>
                                    <description>8</description>
                                    <targetPath>${outputDirectory}/pl-550/8</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <includeScope>provided</includeScope>
                                    </dependency>
                                </resource>
                                <!-- All transitive dependencies, "test" excluded -->
                                <resource>
                                    <description>9</description>
                                    <targetPath>${outputDirectory}/pl-550/9</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <excludeScope>test</excludeScope>
                                    </dependency>
                                </resource>
                                <!-- All transitive dependencies, "provided" excluded -->
                                <resource>
                                    <description>10</description>
                                    <targetPath>${outputDirectory}/pl-550/10</targetPath>
                                    <dependency>
                                        <groupId>org.springframework</groupId>
                                        <artifactId>spring-context</artifactId>
                                        <version>${spring-version}</version>
                                        <excludeScope>provided</excludeScope>
                                        <!-- Not available in Maven repos -->
                                        <excludeGroupIds>com.sun.jmx,com.sun.jdmk</excludeGroupIds>
                                    </dependency>
                                </resource>
                                <!-- "Filtering" dependency with "compile" scope, no transitivity -->
                                <resource>
                                    <description>compile</description>
                                    <targetPath>${outputDirectory}/pl-550/compile</targetPath>
                                    <dependency>
                                        <includeScope>compile</includeScope>
                                        <excludeTransitive>true</excludeTransitive>
                                    </dependency>
                                </resource>
                                <!-- "Filtering" dependency with "test" scope, no transitivity -->
                                <resource>
                                    <description>test</description>
                                    <targetPath>${outputDirectory}/pl-550/test</targetPath>
                                    <dependency>
                                        <includeScope>test</includeScope>
                                        <excludeTransitive>true</excludeTransitive>
                                    </dependency>
                                </resource>
                                <!-- "Filtering" dependency with "provided" scope, no transitivity -->
                                <resource>
                                    <description>provided</description>
                                    <targetPath>${outputDirectory}/pl-550/provided</targetPath>
                                    <dependency>
                                        <includeScope>provided</includeScope>
                                        <excludeTransitive>true</excludeTransitive>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "compile" scope, including optional -->
                                <resource>
                                    <description>optional-4</description>
                                    <targetPath>${outputDirectory}/pl-550/optional-4</targetPath>
                                    <dependency>
                                        <includeScope>compile</includeScope>
                                        <includeOptional>true</includeOptional>
                                        <!-- Not available in Maven repos or there are no jars (only POMs) -->
                                        <excludeGroupIds>activation,xml-apis,javax.jws,com.sun</excludeGroupIds>
                                        <excludeArtifactIds>xerces-impl</excludeArtifactIds>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "test" scope, including optional -->
                                <resource>
                                    <description>optional-5</description>
                                    <targetPath>${outputDirectory}/pl-550/optional-5</targetPath>
                                    <dependency>
                                        <includeScope>test</includeScope>
                                        <includeOptional>true</includeOptional>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "provided" scope, including optional -->
                                <resource>
                                    <description>optional-6</description>
                                    <targetPath>${outputDirectory}/pl-550/optional-6</targetPath>
                                    <dependency>
                                        <includeScope>provided</includeScope>
                                        <includeOptional>true</includeOptional>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "compile" scope -->
                                <resource>
                                    <description>12</description>
                                    <targetPath>${outputDirectory}/pl-550/12</targetPath>
                                    <dependency>
                                        <includeScope>compile</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "test" scope -->
                                <resource>
                                    <description>22</description>
                                    <targetPath>${outputDirectory}/pl-550/22</targetPath>
                                    <dependency>
                                        <includeScope>test</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "provided" scope -->
                                <resource>
                                    <description>32</description>
                                    <targetPath>${outputDirectory}/pl-550/32</targetPath>
                                    <dependency>
                                        <includeScope>provided</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "compile" scope, "test" and "provided" excluded -->
                                <resource>
                                    <description>42</description>
                                    <targetPath>${outputDirectory}/pl-550/42</targetPath>
                                    <dependency>
                                        <includeScope>compile</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "compile" scope, "test" excluded -->
                                <resource>
                                    <description>52</description>
                                    <targetPath>${outputDirectory}/pl-550/52</targetPath>
                                    <dependency>
                                        <includeScope>compile</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "compile" scope, "provided" excluded -->
                                <resource>
                                    <description>62</description>
                                    <targetPath>${outputDirectory}/pl-550/62</targetPath>
                                    <dependency>
                                        <includeScope>compile</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "test" scope, "compile" excluded -->
                                <resource>
                                    <description>72</description>
                                    <targetPath>${outputDirectory}/pl-550/72</targetPath>
                                    <dependency>
                                        <includeScope>test</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency with "provided" scope, "compile" excluded -->
                                <resource>
                                    <description>82</description>
                                    <targetPath>${outputDirectory}/pl-550/82</targetPath>
                                    <dependency>
                                        <includeScope>provided</includeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency, "test" scope excluded -->
                                <resource>
                                    <description>92</description>
                                    <targetPath>${outputDirectory}/pl-550/92</targetPath>
                                    <dependency>
                                        <excludeScope>test</excludeScope>
                                    </dependency>
                                </resource>
                                <!-- Transitive "filtering" dependency, "provided" scope excluded -->
                                <resource>
                                    <description>102</description>
                                    <targetPath>${outputDirectory}/pl-550/102</targetPath>
                                    <dependency>
                                        <excludeScope>provided</excludeScope>
                                        <excludeGroupIds>com.sun,javax.xml.soap</excludeGroupIds>
                                    </dependency>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>assert-maven-plugin</artifactId>
                <version>${plugins-version}</version>
                <executions>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-625 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-625</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertEqual>
                                ${outputDirectory}/pl-625/1|${outputDirectory}/pl-625/2
                                ${outputDirectory}/pl-625/2|${outputDirectory}/pl-625/3
                                ${outputDirectory}/pl-625/3|${outputDirectory}/pl-625/1
                            </assertEqual>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-617 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-617</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDirectory}/pl-617/1-Ant.tar
                                ${outputDirectory}/pl-617/2-Ant.zip
                                ${outputDirectory}/pl-617/3-Ant.zip
                                ${outputDirectory}/pl-617/4-Ant.zip
                                ${outputDirectory}/pl-617/5-Ant.tar.gz
                                ${outputDirectory}/pl-617/1-TrueZip.tar
                                ${outputDirectory}/pl-617/2-TrueZip.zip
                                ${outputDirectory}/pl-617/3-TrueZip.tar.gz
                            </assertFiles>
                            <assertGroovy>
                                <!-- Ant compression: tar, 3 compression levels (0, 5, 9), tar.gz -->
                                new File( outputDirectory, 'pl-617/1-Ant.tar' ).size() > new File( outputDirectory, 'pl-617/2-Ant.zip'    ).size()
                                new File( outputDirectory, 'pl-617/2-Ant.zip' ).size() > new File( outputDirectory, 'pl-617/3-Ant.zip'    ).size()
                                new File( outputDirectory, 'pl-617/3-Ant.zip' ).size() > new File( outputDirectory, 'pl-617/4-Ant.zip'    ).size()
                                new File( outputDirectory, 'pl-617/4-Ant.zip' ).size() > new File( outputDirectory, 'pl-617/5-Ant.tar.gz' ).size()

                                <!-- TrueZip compression: tar, zip, tar.gz. Better in all categories! -->
                                new File( outputDirectory, 'pl-617/1-Ant.tar'    ).size() > new File( outputDirectory, 'pl-617/1-TrueZip.tar'    ).size()
                                new File( outputDirectory, 'pl-617/4-Ant.zip'    ).size() > new File( outputDirectory, 'pl-617/2-TrueZip.zip'    ).size()
                                new File( outputDirectory, 'pl-617/5-Ant.tar.gz' ).size() > new File( outputDirectory, 'pl-617/3-TrueZip.tar.gz' ).size()
                            </assertGroovy>
                        </configuration>
                    </execution>
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <!-- http://evgeny-goldin.org/youtrack/issue/pl-550 -->
                    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
                    <execution>
                        <id>http://evgeny-goldin.org/youtrack/issue/pl-550</id>
                        <goals>
                            <goal>assert</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <assertFiles>
                                ${outputDirectory}/pl-550
                                ${outputDirectory}/pl-550/dependency-plugin
                                ${outputDirectory}/pl-550/all
                                ${outputDirectory}/pl-550/optional-1
                                ${outputDirectory}/pl-550/optional-2
                                ${outputDirectory}/pl-550/optional-3
                                ${outputDirectory}/pl-550/single
                                ${outputDirectory}/pl-550/single-compile
                                ${outputDirectory}/pl-550/single-test
                                ${outputDirectory}/pl-550/single-provided

                                ${outputDirectory}/pl-550/1
                                ${outputDirectory}/pl-550/2
                                ${outputDirectory}/pl-550/3
                                ${outputDirectory}/pl-550/4
                                ${outputDirectory}/pl-550/5
                                ${outputDirectory}/pl-550/6
                                ${outputDirectory}/pl-550/7
                                ${outputDirectory}/pl-550/8
                                ${outputDirectory}/pl-550/9
                                ${outputDirectory}/pl-550/10

                                ${outputDirectory}/pl-550/compile
                                ${outputDirectory}/pl-550/test
                                ${outputDirectory}/pl-550/provided
                                ${outputDirectory}/pl-550/optional-4
                                ${outputDirectory}/pl-550/optional-5
                                ${outputDirectory}/pl-550/optional-6

                                ${outputDirectory}/pl-550/12
                                ${outputDirectory}/pl-550/22
                                ${outputDirectory}/pl-550/32
                                ${outputDirectory}/pl-550/42
                                ${outputDirectory}/pl-550/52
                                ${outputDirectory}/pl-550/62
                                ${outputDirectory}/pl-550/72
                                ${outputDirectory}/pl-550/82
                                ${outputDirectory}/pl-550/92
                                ${outputDirectory}/pl-550/102
                            </assertFiles>
                            <assertGroovy>
                                new File( outputDirectory, 'pl-550/1'   ).listFiles().size() == ${springCompileDependencies}
                                new File( outputDirectory, 'pl-550/2'   ).listFiles().size() == ${springTestDependencies}
                                new File( outputDirectory, 'pl-550/3'   ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/4'   ).listFiles().size() == ${springCompileDependencies}
                                new File( outputDirectory, 'pl-550/5'   ).listFiles().size() == ${springCompileDependencies}
                                new File( outputDirectory, 'pl-550/6'   ).listFiles().size() == ${springCompileDependencies}
                                new File( outputDirectory, 'pl-550/7'   ).listFiles().size() == ${springTestDependencies}
                                new File( outputDirectory, 'pl-550/8'   ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/9'   ).listFiles().size() == 11
                                new File( outputDirectory, 'pl-550/10'  ).listFiles().size() == 29

                                new File( outputDirectory, 'pl-550/12'  ).listFiles().size() == ${springCompileDependencies}
                                new File( outputDirectory, 'pl-550/22'  ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/32'  ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/42'  ).listFiles().size() == ${springCompileDependencies}
                                new File( outputDirectory, 'pl-550/52'  ).listFiles().size() == ${springCompileDependencies}
                                new File( outputDirectory, 'pl-550/62'  ).listFiles().size() == ${springCompileDependencies}
                                new File( outputDirectory, 'pl-550/72'  ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/82'  ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/92'  ).listFiles().size() == 11
                                new File( outputDirectory, 'pl-550/102' ).listFiles().size() == 29


                                new File( outputDirectory, 'pl-550/all'               ).listFiles().size() == 32
                                new File( outputDirectory, 'pl-550/compile'           ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/dependency-plugin' ).listFiles().size() == 11
                                new File( outputDirectory, 'pl-550/optional-1'        ).listFiles().size() == 159
                                new File( outputDirectory, 'pl-550/optional-2'        ).listFiles().size() == 37
                                new File( outputDirectory, 'pl-550/optional-3'        ).listFiles().size() == 27
                                new File( outputDirectory, 'pl-550/optional-4'        ).listFiles().size() == 86
                                new File( outputDirectory, 'pl-550/optional-5'        ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/optional-6'        ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/provided'          ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/single'            ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/single-compile'    ).listFiles().size() == 6
                                new File( outputDirectory, 'pl-550/single-provided'   ).listFiles().size() == 1
                                new File( outputDirectory, 'pl-550/single-test'       ).listFiles().size() == 9
                                new File( outputDirectory, 'pl-550/test'              ).listFiles().size() == 1
                            </assertGroovy>
                            <assertEqual>
                                ${outputDirectory}/pl-550/1|${outputDirectory}/pl-550/4
                                ${outputDirectory}/pl-550/4|${outputDirectory}/pl-550/5
                                ${outputDirectory}/pl-550/5|${outputDirectory}/pl-550/6
                                ${outputDirectory}/pl-550/6|${outputDirectory}/pl-550/12
                                ${outputDirectory}/pl-550/12|${outputDirectory}/pl-550/42
                                ${outputDirectory}/pl-550/42|${outputDirectory}/pl-550/52
                                ${outputDirectory}/pl-550/52|${outputDirectory}/pl-550/62

                                ${outputDirectory}/pl-550/7|${outputDirectory}/pl-550/2

                                ${outputDirectory}/pl-550/8|${outputDirectory}/pl-550/3
                                ${outputDirectory}/pl-550/3|${outputDirectory}/pl-550/32
                                ${outputDirectory}/pl-550/32|${outputDirectory}/pl-550/82
                                ${outputDirectory}/pl-550/82|${outputDirectory}/pl-550/optional-6
                                ${outputDirectory}/pl-550/optional-6|${outputDirectory}/pl-550/provided
                                ${outputDirectory}/pl-550/provided|${outputDirectory}/pl-550/single-provided

                                ${outputDirectory}/pl-550/22|${outputDirectory}/pl-550/72
                                ${outputDirectory}/pl-550/72|${outputDirectory}/pl-550/optional-5
                                ${outputDirectory}/pl-550/optional-5|${outputDirectory}/pl-550/test

                                ${outputDirectory}/pl-550/9|${outputDirectory}/pl-550/92

                                ${outputDirectory}/pl-550/compile|${outputDirectory}/pl-550/single
                            </assertEqual>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring-version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jsr166-mirror</groupId>
            <artifactId>jsr166</artifactId>
            <version>1.7.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>
